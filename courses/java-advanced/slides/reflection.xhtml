<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="ru" xml:lang="ru" xmlns="http://www.w3.org/1999/xhtml"><head><title>Технологии Java / Reflection</title><meta name="author" content="" /><link rel="stylesheet" type="text/css" media="screen, projection, print" href="scripts/slidy.css" /><link rel="stylesheet" type="text/css" href="scripts/prettify.css" /><link rel="stylesheet" type="text/css" href="scripts/kgeorgiy-slides.css" /><script type="text/javascript" src="scripts/slidy.js" charset="utf-8" /><script type="text/javascript" src="scripts/kgeorgiy-slides.js" charset="utf-8" /><script type="text/javascript" src="scripts/prettify.js" /><script type="text/javascript" src="scripts/lang-sql.js" /><script type="text/javascript" src="scripts/lang-javaModule.js" /><script type="text/javascript" src="scripts/lang-scala.js" /><script>var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-37693764-1"]);_gaq.push(["_setDomainName","kgeorgiy.info"]);_gaq.push(["_trackPageview"]);(function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var b=document.getElementsByTagName("script")[0];b.parentNode.insertBefore(a,b)})();</script><script async="async" src="https://www.googletagmanager.com/gtag/js?id=G-8EQ66D87ZZ" /><script>
                  window.dataLayer = window.dataLayer || [];
                  function gtag(){dataLayer.push(arguments);}
                  gtag('js', new Date());

                  gtag('config', 'G-8EQ66D87ZZ');
                </script></head><body onload="prettyPrint()"><div id="all">
<div class="slide cover"><div class="content"><div class="course">Технологии Java</div><hr /><div class="lecture"><div>Reflection</div></div><div class="link"><a href="https://kgeorgiy.info/courses/java-advanced/">https://kgeorgiy.info/courses/java-advanced/</a></div><div class="copyright"><a href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.ru"><span class="copyright">Copyright © Georgiy Korneev</span><img src="scripts/by-nc-sa.png" alt="Attribution-NonCommercial-ShareAlike" /></a></div></div></div>
<div class="slide section"><div class="content"><h1>Информация о типах</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc current">Информация о типах</a><ol class="level-2 toc-2"><li><a href="#(3)" class="">Идентификаторы типов</a></li><li><a href="#(10)" class="">Классы</a></li><li><a href="#(26)" class="">Специальные типы</a></li></ol></li><li><a href="#(33)" class="toc">Загрузчики классов</a></li><li><a href="#(40)" class="toc">Метаданные (аннотации)</a></li><li><a href="#(53)" class="toc">Параметры типов</a></li><li><a href="#(61)" class="toc">Proxy</a></li><li><a href="#(69)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">2</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Идентификаторы типов</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc current">Информация о типах</a><ol class="level-2 toc-2"><li><a href="#(3)" class=" current">Идентификаторы типов</a></li><li><a href="#(10)" class="">Классы</a></li><li><a href="#(26)" class="">Специальные типы</a></li></ol></li><li><a href="#(33)" class="toc">Загрузчики классов</a></li><li><a href="#(40)" class="toc">Метаданные (аннотации)</a></li><li><a href="#(53)" class="toc">Параметры типов</a></li><li><a href="#(61)" class="toc">Proxy</a></li><li><a href="#(69)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">3</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Информация о типе</h1><div class="body"><ul class="item-1 level-1"><li>Класс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html" target="_blank">Class&lt;T&gt;</a></var> ─ информация о типе<ul class="item-2 level-2"><li>Type token</li></ul></li><li>Предоставляемая информация<ul class="item-2 level-2"><li>Структура класса</li><li>Структура наследования</li><li>Проверки времени выполнения</li><li>...</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">4</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Получение информации о типе</h1><div class="body"><ul class="item-1 level-1"><li>Во время исполнения<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Object.html#getClass()" target="_blank">object.getClass()</a></var></li></ul></li><li>Во время компиляции<ul class="item-2 level-2"><li><var>Type.class</var></li><li>Примеры<ul class="item-3 level-3"><li><pre class="prettyprint lang-java">ArrayList.class</pre></li><li><pre class="prettyprint lang-java">int.class</pre></li><li><pre class="prettyprint lang-java">int[].class</pre></li></ul></li></ul></li><li>Предопределенные<ul class="item-2 level-2"><li><var><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Integer.html" target="_blank">Wrapper</a></var>.TYPE</var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">5</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Типы типов</h1><div class="body"><ul class="item-1 level-1"><li>Для определения типов служат методы вида<ul class="item-2 level-2"><li><var>is*()</var><table><tr><td>Аннотация </td><td><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#isAnnotation()" target="_blank">Annotation</a></var></td></tr><tr><td>Массив </td><td><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#isArray()" target="_blank">Array</a></var></td></tr><tr><td>Примитивный </td><td><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#isPrimitive()" target="_blank">Primitive</a></var></td></tr><tr><td>Интерфейс </td><td><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#isInterface()" target="_blank">Interface</a></var></td></tr><tr><td>Класс </td><td><var>*Class</var></td></tr><tr><td>  Анонимный класс </td><td>  <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#isAnonymousClass()" target="_blank">Anonymous</a></var></td></tr><tr><td>  Локальный класс </td><td>  <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#isLocalClass()" target="_blank">Local</a></var></td></tr><tr><td>  Класс-член </td><td>  <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#isMemberClass()" target="_blank">Member</a></var></td></tr></table></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">6</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Общая информация о классе</h1><div class="body"><ul class="item-1 level-1"><li>Имя класса<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getCanonicalName()" target="_blank">getCanonicalName()</a></var> – Java-имя</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getName()" target="_blank">getName()</a></var> – двоичное имя</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getSimpleName()" target="_blank">getSimpleName()</a></var> – простое имя</li></ul></li><li>Структура классов<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getSuperclass()" target="_blank">getSuperclass()</a></var> – предок</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getInterfaces()" target="_blank">getInterfaces()</a></var> – реализуемые интерфейсы</li></ul></li><li>Модификаторы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getModifiers()" target="_blank">getModifiers()</a></var> – модификаторы</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">7</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Место определения класса</h1><div class="body"><ul class="item-1 level-1"><li>Методы получения места, в котором определен класс <table><tr><th>Тип класса </th><th>Метод</th></tr><tr><td>Верхнего уровня </td><td><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getPackage()" target="_blank">getPackage()</a></var></td></tr><tr><td>Вложенный </td><td><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getDeclaringClass()" target="_blank">getDeclaringClass()</a></var></td></tr><tr><td>  в конструктор </td><td>  <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getEnclosingConstructor()" target="_blank">getEnclosingConstructor()</a></var></td></tr><tr><td>  в метод </td><td>  <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getEnclosingMethod()" target="_blank">getEnclosingMethod()</a></var></td></tr></table></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">8</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Приведение типов</h1><div class="body"><ul class="item-1 level-1"><li>Определение возможности приведения<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#isAssignableFrom(java.lang.Class)" target="_blank">isAssignableFrom(class)</a></var> – класса</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#isInstance(java.lang.Object)" target="_blank">isInstance(object)</a></var> – объекта</li></ul></li><li>Приведение<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#cast(java.lang.Object)" target="_blank">cast(object)</a></var> – привести ссылку к типу</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">9</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Классы</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc current">Информация о типах</a><ol class="level-2 toc-2"><li><a href="#(3)" class="">Идентификаторы типов</a></li><li><a href="#(10)" class=" current">Классы</a></li><li><a href="#(26)" class="">Специальные типы</a></li></ol></li><li><a href="#(33)" class="toc">Загрузчики классов</a></li><li><a href="#(40)" class="toc">Метаданные (аннотации)</a></li><li><a href="#(53)" class="toc">Параметры типов</a></li><li><a href="#(61)" class="toc">Proxy</a></li><li><a href="#(69)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">10</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Информация о члене класса</h1><div class="body"><ul class="item-1 level-1"><li>Интерфейс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Member.html" target="_blank">Member</a></var></li><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Member.html#getDeclaringClass()" target="_blank">getDeclaringClass()</a></var> – класс, в котором определен</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Member.html#getName()" target="_blank">getName()</a></var> – имя члена</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Member.html#getModifiers()" target="_blank">getModifiers()</a></var> – модификаторы</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">11</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Модификаторы</h1><div class="body"><ul class="item-2 level-2"><li>Класс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html" target="_blank">Modifier</a></var><table><tr><th>Константа </th><th>Метод </th><th>Модификатор</th></tr><tr><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#ABSTRACT" target="_blank">ABSTRACT</a></var></td><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#isAbstract(int)" target="_blank">isAbstract(int)</a></var></td><td class="small"><var>abstract</var></td></tr><tr><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#FINAL" target="_blank">FINAL</a></var></td><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#isFinal(int)" target="_blank">isFinal(int)</a></var></td><td class="small"><var>final</var></td></tr><tr><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#INTERFACE" target="_blank">INTERFACE</a></var></td><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#isInterface(int)" target="_blank">isInterface(int)</a></var></td><td class="small"><var>interface</var></td></tr><tr><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#NATIVE" target="_blank">NATIVE</a></var></td><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#isNative(int)" target="_blank">isNative(int)</a></var></td><td class="small"><var>native</var></td></tr><tr><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#PRIVATE" target="_blank">PRIVATE</a></var></td><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#isPrivate(int)" target="_blank">isPrivate(int)</a></var></td><td class="small"><var>private</var></td></tr><tr><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#PROTECTED" target="_blank">PROTECTED</a></var></td><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#isProtected(int)" target="_blank">isProtected(int)</a></var></td><td class="small"><var>protected</var></td></tr><tr><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#PUBLIC" target="_blank">PUBLIC</a></var></td><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#isPublic(int)" target="_blank">isPublic(int)</a></var></td><td class="small"><var>public</var></td></tr><tr><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#STATIC" target="_blank">STATIC</a></var></td><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#isStatic(int)" target="_blank">isStatic(int)</a></var></td><td class="small"><var>static</var></td></tr><tr><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#STRICT" target="_blank">STRICT</a></var></td><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#isStrict(int)" target="_blank">isStrict(int)</a></var></td><td class="small"><var>strictfp</var></td></tr><tr><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#SYNCHRONIZED" target="_blank">SYNCHRONIZED</a></var></td><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#isSynchronized(int)" target="_blank">isSynchronized(int)</a></var></td><td class="small"><var>synchronized</var></td></tr><tr><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#TRANSIENT" target="_blank">TRANSIENT</a></var></td><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#isTransient(int)" target="_blank">isTransient(int)</a></var></td><td class="small"><var>transient</var></td></tr><tr><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#VOLATILE" target="_blank">VOLATILE</a></var></td><td class="small"><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Modifier.html#isVolatile(int)" target="_blank">isVolatile(int)</a></var></td><td class="small"><var>volatile</var></td></tr></table></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">12</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Модификаторы (Java 20+)</h1><div class="body"><ul class="item-1 level-1"><li>Перечисление <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/AccessFlag.html" target="_blank">AccessFlag</a></var></li><li>Метод <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Set.html" target="_blank">Set&lt;AccessFlag&gt;</a></var> <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#accessFlags()" target="_blank">accessFlags()</a></var></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">13</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Поля</h1><div class="body"><ul class="item-1 level-1"><li>Общедоступные<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getFields()" target="_blank">getFields()</a></var> – все</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getField(java.lang.String)" target="_blank">getField(name)</a></var> – конкретное</li></ul></li><li>Объявленные<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getDeclaredFields()" target="_blank">getDeclaredFields()</a></var> – все</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getDeclaredField(java.lang.String)" target="_blank">getDeclaredField(name)</a></var> – конкретное</li></ul></li><li>Исключение<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/NoSuchFieldException.html" target="_blank">NoSuchFieldException</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">14</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Поля и модификаторы доступа </h1><div class="body"><div class="img-width"><img class="width" style="width: 90%" src="pics/fields.svg" /></div></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">15</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Свойства полей</h1><div class="body"><ul class="item-1 level-1"><li>Класс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Field.html" target="_blank">Field</a></var></li><li>Информация<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Field.html#getName()" target="_blank">getName()</a></var> – имя</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Field.html#getType()" target="_blank">getType()</a></var> – тип</li></ul></li><li>Чтение значения<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Field.html#get(java.lang.Object)" target="_blank">get(object)</a></var> – ссылка</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Field.html#getInt(java.lang.Object)" target="_blank">getT(object)</a></var> – примитивный тип</li></ul></li><li>Запись значения<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Field.html#set(java.lang.Object,java.lang.Object)" target="_blank">set(object, value)</a></var> – ссылка</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Field.html#setInt(java.lang.Object,int)" target="_blank">setT(object, value)</a></var> – примитивный тип</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">16</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Методы</h1><div class="body"><ul class="item-1 level-1"><li>Общедоступные<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getMethods()" target="_blank">getMethods()</a></var> – все</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getMethod(java.lang.String,java.lang.Class...)" target="_blank">getMethod(name, parameters...)</a></var> – конкретный</li></ul></li><li>Все<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getDeclaredMethods()" target="_blank">getDeclaredMethods()</a></var> – все</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getDeclaredMethod(java.lang.String,java.lang.Class...)" target="_blank">getDeclaredMethod(name, parameters...)</a></var> – конкретный</li></ul></li><li>Исключение<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/NoSuchMethodException.html" target="_blank">NoSuchMethodException</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">17</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Свойства методов</h1><div class="body"><ul class="item-1 level-1"><li>Класс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Method.html" target="_blank">Method</a></var></li><li>Сигнатура метода<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Method.html#getName()" target="_blank">getName()</a></var> – имя</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Executable.html#getParameterTypes()" target="_blank">getParameterTypes()</a></var> – параметры</li></ul></li><li>Другая информация<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Method.html#getReturnType()" target="_blank">getReturnType()</a></var> – тип возвращаемого значения</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Executable.html#getExceptionTypes()" target="_blank">getExceptionTypes()</a></var> – возможные исключения</li></ul></li><li>Вызов метода<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Method.html#invoke(java.lang.Object,java.lang.Object...)" target="_blank">invoke(object, args...)</a></var> – вызвать метод с указанными аргументами</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/InvocationTargetException.html" target="_blank">InvocationTargetException</a></var> – в случае ошибки</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">18</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Конструкторы</h1><div class="body"><ul class="item-1 level-1"><li>Общедоступные<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getConstructors()" target="_blank">getConstructors()</a></var> – все конструкторы</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getConstructor(java.lang.Class...)" target="_blank">getConstructor(parameters...)</a></var> – конкретный конструктор</li></ul></li><li>Объявленные<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getDeclaredConstructors()" target="_blank">getDeclaredConstructors()</a></var> – все конструкторы</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getDeclaredConstructor(java.lang.Class...)" target="_blank">getDeclaredConstructor(parameters...)</a></var> – конкретный конструктор</li></ul></li><li>Исключения<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/NoSuchMethodException.html" target="_blank">NoSuchMethodException</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">19</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Свойства конструкторов</h1><div class="body"><ul class="item-1 level-1"><li>Класс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Constructor.html" target="_blank">Constructor</a></var></li><li>Информация о конструкторе<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Executable.html#getParameterTypes()" target="_blank">getParameterTypes()</a></var> – параметры конструктора</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Executable.html#getExceptionTypes()" target="_blank">getExceptionTypes()</a></var> – возможные исключения</li></ul></li><li>Создание объекта<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Constructor.html#newInstance(java.lang.Object...)" target="_blank">newInstance(args...)</a></var> – создать новый объект</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#newInstance()" target="_blank">class.newInstance()</a></var> – создать новый объект используя конструктор по умолчанию</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">20</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Классы и интерфейсы</h1><div class="body"><ul class="item-1 level-1"><li>Внутренние классы и интерфейсы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getClasses()" target="_blank">getClasses()</a></var> – общедоступные</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getDeclaredClasses()" target="_blank">getDeclaredClasses()</a></var> – объявленные</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">21</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Доступ к закрытым членам</h1><div class="body"><ul class="item-1 level-1"><li>По умолчанию доступ к закрытым членам запрещен ⇒ <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/IllegalAccessException.html" target="_blank">IllegalAccessException</a></var></li><li>Все члены <var>extends <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/AccessibleObject.html" target="_blank">AccessibleObject</a></var></var><ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/AccessibleObject.html#canAccess(java.lang.Object)" target="_blank">canAccess(instance)</a></var> – проверить доступ</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/AccessibleObject.html#setAccessible(boolean)" target="_blank">setAccessible(boolean)</a></var> – установить доступ</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/AccessibleObject.html#trySetAccessible()" target="_blank">trySetAccessible()</a></var> – запросить доступ</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">22</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример: листинг класса </h1><div class="body"><pre class="prettyprint lang-java">Class c = …;
for (Field m : c.getDeclaredFields()) {
    System.out.println(m);
}
for (Constructor m : c.getDeclaredConstructors()) {
    System.out.println(m);
}
for (Method m : c.getDeclaredMethods()) {
    System.out.println(m);
}
</pre></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">23</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример: поля класса String</h1><div class="body"><ul class="item-2 level-2"><li><pre class="prettyprint lang-java">private final byte[] value
private final byte   coder
static final boolean COMPACT_STRINGS
static final byte LATIN1
static final byte UTF16
private int hash
private boolean hashIsZero
private static final char REPL
private static final long serialVersionUID
private static final ObjectStreamField[] 
        serialPersistentFields
public static final Comparator 
        CASE_INSENSITIVE_ORDER
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">24</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример: создание экземпляра </h1><div class="body"><pre class="prettyprint lang-java">// Получение класса
Class&lt;Random&gt; clazz = Random.class;
// Получение конструктора
Constructor&lt;Random&gt; c =
    clazz.getConstructor(long.class);
// Создание экземпляра
Random r = c.newInstance(100L);
// Проверка
System.out.println(r.nextInt());
</pre></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">25</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Специальные типы</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc current">Информация о типах</a><ol class="level-2 toc-2"><li><a href="#(3)" class="">Идентификаторы типов</a></li><li><a href="#(10)" class="">Классы</a></li><li><a href="#(26)" class=" current">Специальные типы</a></li></ol></li><li><a href="#(33)" class="toc">Загрузчики классов</a></li><li><a href="#(40)" class="toc">Метаданные (аннотации)</a></li><li><a href="#(53)" class="toc">Параметры типов</a></li><li><a href="#(61)" class="toc">Proxy</a></li><li><a href="#(69)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">26</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Массивы</h1><div class="body"><ul class="item-1 level-1"><li>Класс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Array.html" target="_blank">Array</a></var></li><li>Создание массива заданного типа<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Array.html#newInstance(java.lang.Class,int)" target="_blank">newInstance(class, length)</a></var> – линейного</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Array.html#newInstance(java.lang.Class,int...)" target="_blank">newInstance(class, dims...)</a></var> – многомерного</li></ul></li><li>Чтение значения из массива<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Array.html#get(java.lang.Object,int)" target="_blank">get(array, index)</a></var> – ссылки</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Array.html#getInt(java.lang.Object,int)" target="_blank">getT(array, index)</a></var> – значения примитивного типа</li></ul></li><li>Запись значения в массив<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Array.html#set(java.lang.Object,int,java.lang.Object)" target="_blank">set(array, index, value)</a></var> – ссылки</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Array.html#setInt(java.lang.Object,int,int)" target="_blank">setT(arrray, index, value)</a></var> – значения примитивного типа</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">27</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Массивы как типы</h1><div class="body"><ul class="item-1 level-1"><li>Имя типа массива<ul class="item-2 level-2"><li><var>[имя_типа_элемента</var></li></ul></li><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#isArray()" target="_blank">class.isArray()</a></var> – является ли массивом</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getComponentType()" target="_blank">class.getComponentType()</a></var> – тип элемента массива</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">28</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Двоичные имена для типов</h1><div class="body"><ul class="item-1 level-1"><li>Специальное кодирование <table><tr><td> class </td><td><var>Lclass;</var></td></tr><tr><td> boolean </td><td><var>Z</var></td></tr><tr><td> byte </td><td><var>B</var></td></tr><tr><td> char </td><td><var>C</var></td></tr><tr><td> double </td><td><var>D</var></td></tr><tr><td> float </td><td><var>F</var></td></tr><tr><td> int </td><td><var>I</var></td></tr><tr><td> long </td><td><var>J</var></td></tr><tr><td> short </td><td><var>S</var></td></tr></table></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">29</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Перечисления</h1><div class="body"><ul class="item-1 level-1"><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#isEnum()" target="_blank">isEnum()</a></var> – признак</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getEnumConstants()" target="_blank">getEnumConstants()</a></var> – значения</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">30</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Записи</h1><div class="body"><ul class="item-1 level-1"><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#isRecord()" target="_blank">isRecord()</a></var> – признак</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getRecordComponents()" target="_blank">getRecordComponents()</a></var> – компоненты</li></ul></li><li>Компоненты записей <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/RecordComponent.html" target="_blank">RecordComponent</a></var><ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/RecordComponent.html#getName()" target="_blank">getName()</a></var> – имя</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/RecordComponent.html#getType()" target="_blank">getType()</a></var> – тип</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/RecordComponent.html#getAccessor()" target="_blank">getAccessor()</a></var> – метод</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">31</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Sealed Classes</h1><div class="body"><ul class="item-1 level-1"><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#isSealed()" target="_blank">isSealed()</a></var> – признак</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getPermittedSubclasses()" target="_blank">getPermittedSubclasses()</a></var> – потомки</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">32</span></div></div></div></div>
<div class="slide section"><div class="content"><h1>Загрузчики классов</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Информация о типах</a></li><li><a href="#(33)" class="toc current">Загрузчики классов</a></li><li><a href="#(40)" class="toc">Метаданные (аннотации)</a></li><li><a href="#(53)" class="toc">Параметры типов</a></li><li><a href="#(61)" class="toc">Proxy</a></li><li><a href="#(69)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">33</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Загрузчики классов</h1><div class="body"><ul class="item-1 level-1"><li>Позволяют загружать и определять новые классы</li><li>Класс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/ClassLoader.html" target="_blank">ClassLoader</a></var></li><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/ClassLoader.html#loadClass(java.lang.String,boolean)" target="_blank">loadClass(name, resolve?)</a></var> – загружает класс по имени</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/ClassLoader.html#findLoadedClass(java.lang.String)" target="_blank">findLoadedClass(name)</a></var> – найти уже загруженный класс</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/ClassLoader.html#resolveClass(java.lang.Class)" target="_blank">resolveClass(class)</a></var> – загружает библиотеки</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">34</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Дерево загрузчиков</h1><div class="body"><ul class="item-1 level-1"><li>Загрузчики образуют дерево</li><li>Загрузчики в разных ветвях могут загрузить разные классы с одним полным именем </li></ul><div class="img-width"><img class="width" style="width: 70%" src="pics/ClassLoaders.svg" /></div></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">35</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Дополнительные возможности</h1><div class="body"><ul class="item-1 level-1"><li>Получение родителя<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/ClassLoader.html#getParent()" target="_blank">getParent()</a></var></li><li><var>null</var> вместо корня</li></ul></li><li>Загрузка ресурсов<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/net/URL.html" target="_blank">URL</a></var> <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/ClassLoader.html#getResource(java.lang.String)" target="_blank">getResource(name)</a></var> – определение местоположения ресурса по имени</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/ClassLoader.html#getResourceAsStream(java.lang.String)" target="_blank">getResourceAsStream(name)</a></var> – чтение ресурса по имени</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">36</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Загрузчики и классы</h1><div class="body"><ul class="item-1 level-1"><li>Получение загрузчика<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getClassLoader()" target="_blank">class.getClassLoader()</a></var> – кто загрузил класс</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Thread.html#getContextClassLoader()" target="_blank">Thread.getContextClassLoader()</a></var> – контекстный загрузчик</li></ul></li><li>«Прямая» загрузка класса<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#forName(java.lang.String)" target="_blank">Class.forName(name)</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#forName(java.lang.String,boolean,java.lang.ClassLoader)" target="_blank">Class.forName(name, init, classLoader)</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">37</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Реализации загрузчиков</h1><div class="body"><ul class="item-1 level-1"><li>Класс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/net/URLClassLoader.html" target="_blank">URLClassLoader</a></var><ul class="item-2 level-2"><li>Загружает классы из нескольких мест, заданных <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/net/URL.html" target="_blank">URL</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">38</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример</h1><div class="body"><ul class="item-1 level-1"><li>Загрузка класса<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">URL url = Path.of(".").toUri().toURL();
ClassLoader cl = new URLClassLoader(new URL[]{url});
Class&lt;?&gt; c = cl.loadClass("Test");
</pre></li></ul></li><li>Вызов <var>main</var><ul class="item-2 level-2"><li><pre class="prettyprint lang-java">Method m = c.getMethod("main", String[].class);
m.invoke(null, (Object) new String[]{"hello"});
</pre></li></ul></li><li>Запуск как <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Runnable.html" target="_blank">Runnable</a></var><ul class="item-2 level-2"><li><pre class="prettyprint lang-java">Constructor&lt;?&gt; constructor = c.getConstructor();
Runnable instance = 
        (Runnable) constructor.newInstance();
instance.run();
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">39</span></div></div></div></div>
<div class="slide section"><div class="content"><h1>Метаданные (аннотации)</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Информация о типах</a></li><li><a href="#(33)" class="toc">Загрузчики классов</a></li><li><a href="#(40)" class="toc current">Метаданные (аннотации)</a></li><li><a href="#(53)" class="toc">Параметры типов</a></li><li><a href="#(61)" class="toc">Proxy</a></li><li><a href="#(69)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">40</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Метаданные и аннотации</h1><div class="body"><ul class="item-1 level-1"><li>Метаданные<ul class="item-2 level-2"><li>Информация, не влияющая на выполнение программы</li></ul></li><li>Аннотации<ul class="item-2 level-2"><li>Представление метаданных в Java</li></ul></li><li>Пакет <var>java.lang.annotation</var></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">41</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример определения аннотации </h1><div class="body"><pre class="prettyprint lang-java">public @interface TODO {
    int id();
    String synopsis();
    String assignee() default "[unassigned]";
    String date() default "[undefined]";
}
</pre></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">42</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример использования аннотации </h1><div class="body"><pre class="prettyprint lang-java">@TODO(
    id = 123,
    synopsis = "Implement",
    assignee = "Georgiy Korneev",
    date = "15.03.2024"
)
public static void giveLecture(String id, String title)
</pre></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">43</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Типы аннотаций</h1><div class="body"><ul class="item-1 level-1"><li>Обыкновенная</li><li>Маркерная – без параметров<ul class="item-2 level-2"><li>Может использоваться без скобок</li><li><pre class="prettyprint lang-java">@MarkerAnnotation</pre></li><li><pre class="prettyprint lang-java">@MarkerAnnotation()</pre></li></ul></li><li>Одиночная – с одним параметром<ul class="item-2 level-2"><li>Параметр должен называться <var>value()</var></li><li>Без указания имени параметра</li><li><pre class="prettyprint lang-java">@SingletonAnnotation("Hello")</pre></li><li><pre class="prettyprint lang-java">@SingletonAnnotation(value="Hello")</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">44</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Типы параметров аннотаций</h1><div class="body"><ul class="item-1 level-1"><li>Основные типы<ul class="item-2 level-2"><li>Примитивные типы</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/String.html" target="_blank">String</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html" target="_blank">Class</a></var></li><li>Перечислимый тип</li><li>Аннотация</li></ul></li><li>Массив вышеперечисленного</li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">45</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Время жизни аннотации</h1><div class="body"><ul class="item-1 level-1"><li>Аннотация <var>@<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/Retention.html" target="_blank">Retention</a></var>(<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/RetentionPolicy.html" target="_blank">RetentionPolicy</a></var>)</var></li><li>Возможные значения<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/RetentionPolicy.html#SOURCE" target="_blank">SOURCE</a></var> – при компиляции</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/RetentionPolicy.html#CLASS" target="_blank">CLASS</a></var> – в класс файле</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/RetentionPolicy.html#RUNTIME" target="_blank">RUNTIME</a></var> – во время выполнения</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">46</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Область применения</h1><div class="body"><ul class="item-1 level-1"><li>Аннотация <var>@<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/Target.html" target="_blank">Target</a></var>(<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/ElementType.html" target="_blank">ElementType</a></var>[])</var></li><li>Возможные значения<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/ElementType.html#PACKAGE" target="_blank">PACKAGE</a></var> – пакет</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/ElementType.html#TYPE" target="_blank">TYPE</a></var> – любой тип</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/ElementType.html#FIELD" target="_blank">FIELD</a></var> – поле класса</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/ElementType.html#CONSTRUCTOR" target="_blank">CONSTRUCTOR</a></var> – конструктор класса</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/ElementType.html#METHOD" target="_blank">METHOD</a></var> – метод класса</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/ElementType.html#PARAMETER" target="_blank">PARAMETER</a></var> – параметр метода</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/ElementType.html#LOCAL_VARIABLE" target="_blank">LOCAL_VARIABLE</a></var> – локальная переменная</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/ElementType.html#TYPE_USE" target="_blank">TYPE_USE</a></var> – применение типа</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/ElementType.html#ANNOTATION_TYPE" target="_blank">ANNOTATION_TYPE</a></var> – аннотация</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/ElementType.html#RECORD_COMPONENT" target="_blank">RECORD_COMPONENT</a></var> – компонента записи</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">47</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Стандартные аннотации</h1><div class="body"><ul class="item-1 level-1"><li><var>@<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/Inherited.html" target="_blank">Inherited</a></var></var><ul class="item-2 level-2"><li>Наследование при переопределении метода / класса</li></ul></li><li><var>@<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/annotation/Documented.html" target="_blank">Documented</a></var></var><ul class="item-2 level-2"><li>Попадает в JavaDoc аннотированного документа</li><li>Применяется для аннотаций, изменяющих поведение</li></ul></li><li><var>@<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/SuppressWarnings.html" target="_blank">SuppressWarnings</a></var>({types})</var><ul class="item-2 level-2"><li>Подавляет предупреждения указанного типа</li></ul></li><li><var>@<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Deprecated.html" target="_blank">Deprecated</a></var></var><ul class="item-2 level-2"><li>Помечает метод/класс как устаревший</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">48</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Аннотации во время выполнения</h1><div class="body"><ul class="item-1 level-1"><li>Интерфейс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/AnnotatedElement.html" target="_blank">AnnotatedElement</a></var></li><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/AnnotatedElement.html#isAnnotationPresent(java.lang.Class)" target="_blank">isAnnotationPresent(class)</a></var> – проверяет наличие аннотации данного типа</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/AnnotatedElement.html#getAnnotation(java.lang.Class)" target="_blank">getAnnotation(class)</a></var> – возвращает аннотацию данного типа.</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/AnnotatedElement.html#getAnnotations()" target="_blank">getAnnotations()</a></var> – все аннотации</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/AnnotatedElement.html#getDeclaredAnnotations()" target="_blank">getDeclaredAnnotations()</a></var> – непосредственно объявленные аннотации</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">49</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример: Тестирование (1)</h1><div class="body"><ul class="item-1 level-1"><li>Аннотация <pre class="prettyprint lang-java">@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.METHOD)
public @interface Test { }
</pre></li><li>Пример использования <pre class="prettyprint lang-java">public class SimpleTest {
    @Test public static void testXXX();
    @Test public static void testYYY();
}
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">50</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример: Тестирование (2)</h1><div class="body"><ul class="item-1 level-1"><li>Запуск тестов <pre class="prettyprint lang-java">for (Method m : clazz.getMethods()) {
  if (m.isAnnotationPresent(Test.class)) {
     try {
        m.invoke(null);
     } catch (Throwable e) {
        System.out.printf("Test %s failed: %s %n",
            m, e.getCause());
     }
  }
}
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">51</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример: Конфигурация</h1><div class="body"><ul class="item-1 level-1"><li>Аннотация<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">@Target(ElementType.TYPE_USE)
public @interface Attr { String value; }
public @interface Array { String value default "NONE"; }
</pre></li></ul></li><li>Описание<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">@Array Map&lt;
    @Attr("id") Integer,
    @Array("items") List&lt;@Attr("value") String&gt;
&gt; values;
</pre></li></ul></li><li>Значение<ul class="item-2 level-2"><li><pre class="prettyprint lang-json">[
    {id: 123, {items: [{value: "v1"}, {value: "v2"}]},
    {id: 456, {items: []}
]
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">52</span></div></div></div></div>
<div class="slide section"><div class="content"><h1>Параметры типов</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Информация о типах</a></li><li><a href="#(33)" class="toc">Загрузчики классов</a></li><li><a href="#(40)" class="toc">Метаданные (аннотации)</a></li><li><a href="#(53)" class="toc current">Параметры типов</a></li><li><a href="#(61)" class="toc">Proxy</a></li><li><a href="#(69)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">53</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Информация о параметрах типов</h1><div class="body"><ul class="item-1 level-1"><li>Информация о конкретных параметрах типов стирается</li><li>Информация о зависимостях типов сохраняется</li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">54</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Получение информация о ПТ</h1><div class="body"><ul class="item-1 level-1"><li>Для классов<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getGenericSuperclass()" target="_blank">getGenericSuperclass()</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getGenericInterfaces()" target="_blank">getGenericInterfaces()</a></var></li></ul></li><li>Для методов и конструкторов<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Executable.html#getGenericParameterTypes()" target="_blank">getGenericParameterTypes()</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Executable.html#getGenericExceptionTypes()" target="_blank">getGenericExceptionTypes()</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Method.html#getGenericReturnType()" target="_blank">getGenericReturnType()</a></var></li></ul></li><li>Для полей<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Field.html#getGenericType()" target="_blank">getGenericType()</a></var></li></ul></li><li>Для компонент записей<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/RecordComponent.html#getGenericSignature()" target="_blank">getGenericSignature()</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">55</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Представление информации о ПТ</h1><div class="body"><ul class="item-1 level-1"><li>Интерфейс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Type.html" target="_blank">Type</a></var><table><tr><th>Вид типа </th><th>Представление</th></tr><tr><td>Классы </td><td><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html" target="_blank">Class</a></var></td></tr><tr><td>Параметризованный класс</td><td><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/ParameterizedType.html" target="_blank">ParameterizedType</a></var></td></tr><tr><td>Переменная типа </td><td><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/TypeVariable.html" target="_blank">TypeVariable</a></var></td></tr><tr><td>Wildcard </td><td><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/WildcardType.html" target="_blank">WildcardType</a></var></td></tr><tr><td>Массивы </td><td><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/GenericArrayType.html" target="_blank">GenericArrayType</a></var></td></tr></table></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">56</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Параметризованные классы</h1><div class="body"><ul class="item-1 level-1"><li>Пример: <var><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Collection.html" target="_blank">Collection</a></var>&lt;<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/String.html" target="_blank">String</a></var>&gt;</var></li><li>Интерфейс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/ParameterizedType.html" target="_blank">ParameterizedType</a></var><ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/ParameterizedType.html#getRawType()" target="_blank">getRawType()</a></var> – непараметризованный тип</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/ParameterizedType.html#getActualTypeArguments()" target="_blank">getActualTypeArguments()</a></var> – реальные аргументы типа</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">57</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Переменные типа</h1><div class="body"><ul class="item-1 level-1"><li>Пример: <var>T</var></li><li>Получение<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Class.html#getTypeParameters()" target="_blank">class.getTypeParameters()</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Method.html#getTypeParameters()" target="_blank">method.getTypeParameters()</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Constructor.html#getTypeParameters()" target="_blank">constructor.getTypeParameters()</a></var></li></ul></li><li>Интерфейс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/TypeVariable.html" target="_blank">TypeVariable</a></var><ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/TypeVariable.html#getName()" target="_blank">getName()</a></var> – имя переменной</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/TypeVariable.html#getBounds()" target="_blank">getBounds()</a></var> – верхние границы</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/TypeVariable.html#getGenericDeclaration()" target="_blank">getGenericDeclaration()</a></var> – кто объявил</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">58</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Wildcards</h1><div class="body"><ul class="item-1 level-1"><li>Пример: <var>? super <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/HashSet.html" target="_blank">HashSet</a></var> extends <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Collection.html" target="_blank">Collection</a></var></var></li><li>Интерфейс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/WildcardType.html" target="_blank">WildcardType</a></var><ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/WildcardType.html#getUpperBounds()" target="_blank">getUpperBounds()</a></var> – верхние границы</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/WildcardType.html#getLowerBounds()" target="_blank">getLowerBounds()</a></var> – нижние границы</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">59</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Массивы</h1><div class="body"><ul class="item-1 level-1"><li>Тип элемента – переменная типа<ul class="item-2 level-2"><li>Пример: <var>T[]</var></li></ul></li><li>Тип элемента – параметризованный тип<ul class="item-2 level-2"><li>Пример: <var><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Set.html" target="_blank">Set</a></var>&lt;T&gt;[]</var></li></ul></li><li>Интерфейс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/GenericArrayType.html" target="_blank">GenericArrayType</a></var><ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/GenericArrayType.html#getGenericComponentType()" target="_blank">getGenericComponentType()</a></var> – тип элемента</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">60</span></div></div></div></div>
<div class="slide section"><div class="content"><h1>Proxy</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Информация о типах</a></li><li><a href="#(33)" class="toc">Загрузчики классов</a></li><li><a href="#(40)" class="toc">Метаданные (аннотации)</a></li><li><a href="#(53)" class="toc">Параметры типов</a></li><li><a href="#(61)" class="toc current">Proxy</a></li><li><a href="#(69)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">61</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Proxy</h1><div class="body"><ul class="item-1 level-1"><li>Генерация классов во время исполнения<ul class="item-2 level-2"><li>Фиктивные классы</li><li>Реализующие требуемые интерфейсы</li></ul></li><li>Класс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Proxy.html" target="_blank">Proxy</a></var></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">62</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Делегация вызовов</h1><div class="body"><ul class="item-1 level-1"><li>Класс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/InvocationHandler.html" target="_blank">InvocationHandler</a></var><ul class="item-2 level-2"><li>Делегируются вызовы, совершенные на <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Proxy.html" target="_blank">Proxy</a></var></li></ul></li><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/InvocationHandler.html#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" target="_blank">invoke(Object proxy, Method method, Object[] args)</a></var> – уведомляет о вызове метода</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">63</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Методы Proxy</h1><div class="body"><ul class="item-1 level-1"><li>Создание экземпляра<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Proxy.html#newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)" target="_blank">newProxyInstance(classLoader, interfaces[], handler)</a></var></li></ul></li><li>Получение класса<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Proxy.html#getProxyClass(java.lang.ClassLoader,java.lang.Class...)" target="_blank">getProxyClass(classLoader, interfaces...)</a></var></li></ul></li><li>Проверка класса<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/reflect/Proxy.html#isProxyClass(java.lang.Class)" target="_blank">isProxyClass(class)</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">64</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример: профайлер (1)</h1><div class="body"><ul class="item-1 level-1"><li>Класс <pre class="prettyprint lang-java">public class Profiler implements
        InvocationHandler {
    // Экземпляр Proxy
    private final Object instance;
    // Реальная реализация
    private final Object impl;
    ...
}
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">65</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример: профайлер (2)</h1><div class="body"><ul class="item-1 level-1"><li>Конструктор <pre class="prettyprint lang-java">public Profiler(Class[] i8s, Object impl) {
    this.impl = impl;
    instance = Proxy.newProxyInstance(
        null, i8s, this);
}
</pre></li><li>Создание экземпляра <pre class="prettyprint lang-java">public Object getInstance() {
    return instance;
}
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">66</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример: профайлер (3)</h1><div class="body"><ul class="item-1 level-1"><li>Основной метод <pre class="prettyprint lang-java">public Object invoke(Object proxy,
        Method method, Object[] args
) throws IllegalAccessException,
        InvocationTargetException {
    System.out.println(
        "Calling " + method + " on " + impl);
    return method.invoke(impl, args);
}
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">67</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример: профайлер (4)</h1><div class="body"><ul class="item-1 level-1"><li>Применение <pre class="prettyprint lang-java">public static void main(String[] args) {
    Integer i1 = new Integer(3);
    Profiler profiler = new Profiler(
        new Class[]{Comparable.class}, i1);
    Comparable i2 =
        (Comparable) profiler.getInstance();
    System.out.println(i2.compareTo(i1));
}
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">68</span></div></div></div></div>
<div class="slide section"><div class="content"><h1>Заключение</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Информация о типах</a></li><li><a href="#(33)" class="toc">Загрузчики классов</a></li><li><a href="#(40)" class="toc">Метаданные (аннотации)</a></li><li><a href="#(53)" class="toc">Параметры типов</a></li><li><a href="#(61)" class="toc">Proxy</a></li><li><a href="#(69)" class="toc current">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">69</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Выводы</h1><div class="body"><ul class="item-1 level-1"><li>Reflection позволяет<ul class="item-2 level-2"><li>Анализировать классы по время исполнения</li><li>Загружать классы по имени</li><li>Создавать экземпляры классов</li><li>Вызывать методы классов по имени</li><li>Оперировать значениями полей по имени</li><li>Создавать и оперировать с массивами по типу элемента</li><li>Создавать proxy для интерфейсов</li><li>Работать с аннотациями</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">70</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Осталось за кадром</h1><div class="body"><ul class="item-1 level-1"><li>Обработка аннотаций во время компиляции<ul class="item-2 level-2"><li>Пакет <var>javax.annotation.processing</var></li><li>Проверка и генерация кода</li></ul></li><li>Модель языка<ul class="item-2 level-2"><li>Пакет <var>javax.lang.model</var></li><li>Информация о типах</li></ul></li><li>Поддержка лямбд и динамических языков<ul class="item-2 level-2"><li>Пакет <var>javax.lang.invoke</var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/invoke/MethodHandle.html" target="_blank">MethodHandle</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/invoke/VarHandle.html" target="_blank">VarHandle</a></var></li></ul></li><li>Генерация байткода</li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">71</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Ссылки</h1><div class="body"><ul class="item-1 level-1"><li>Reflection (Guide) // <a href="http://docs.oracle.com/javase/8/docs/technotes/guides/reflection/" target="_blank">http://docs.oracle.com/javase/8/docs/technotes/<br />guides/reflection/</a></li><li>The Reflection API (tutorial) // <a href="https://docs.oracle.com/javase/tutorial/reflect/" target="_blank">https://docs.oracle.com/javase/tutorial/reflect/</a></li><li><em>Forman I.R.</em>, <em>Forman N.</em> Java Reflection in Action // <a href="http://manning.com/forman/" target="_blank">http://manning.com/forman/</a></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">72</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Вопросы</h1><div class="body"><div class="questions">???</div></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Reflection</span><span class="number">73</span></div></div></div></div></div></body></html>