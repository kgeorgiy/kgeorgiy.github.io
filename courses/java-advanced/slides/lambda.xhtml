<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="ru" xml:lang="ru" xmlns="http://www.w3.org/1999/xhtml"><head><title>Технологии Java / Лямбда-выражения и потоки</title><meta name="author" content="" /><link rel="stylesheet" type="text/css" media="screen, projection, print" href="scripts/slidy.css" /><link rel="stylesheet" type="text/css" href="scripts/prettify.css" /><link rel="stylesheet" type="text/css" href="scripts/kgeorgiy-slides.css" /><script type="text/javascript" src="scripts/slidy.js" charset="utf-8" /><script type="text/javascript" src="scripts/kgeorgiy-slides.js" charset="utf-8" /><script type="text/javascript" src="scripts/prettify.js" /><script type="text/javascript" src="scripts/lang-sql.js" /><script type="text/javascript" src="scripts/lang-javaModule.js" /><script type="text/javascript" src="scripts/lang-scala.js" /><script>var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-37693764-1"]);_gaq.push(["_setDomainName","kgeorgiy.info"]);_gaq.push(["_trackPageview"]);(function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var b=document.getElementsByTagName("script")[0];b.parentNode.insertBefore(a,b)})();</script><script async="async" src="https://www.googletagmanager.com/gtag/js?id=G-8EQ66D87ZZ" /><script>
                  window.dataLayer = window.dataLayer || [];
                  function gtag(){dataLayer.push(arguments);}
                  gtag('js', new Date());

                  gtag('config', 'G-8EQ66D87ZZ');
                </script></head><body onload="prettyPrint()"><div id="all">
<div class="slide cover"><div class="content"><div class="course">Технологии Java</div><hr /><div class="lecture"><div>Лямбда-выражения и потоки</div></div><div class="link"><a href="https://kgeorgiy.info/courses/java-advanced/">https://kgeorgiy.info/courses/java-advanced/</a></div><div class="copyright"><a href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.ru"><span class="copyright">Copyright © Georgiy Korneev</span><img src="scripts/by-nc-sa.png" alt="Attribution-NonCommercial-ShareAlike" /></a></div></div></div>
<div class="slide section"><div class="content"><h1>Лямбда-выражения</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc current">Лямбда-выражения</a></li><li><a href="#(10)" class="toc">Основные классы</a></li><li><a href="#(17)" class="toc">Коллекции</a></li><li><a href="#(24)" class="toc">Потоки значений</a></li><li><a href="#(41)" class="toc">Реализация потоков</a></li><li><a href="#(66)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">2</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Функциональный интерфейс</h1><div class="body"><ul class="item-1 level-1"><li>Содержит ровно один метод не по умолчанию<ul class="item-2 level-2"><li><var>void <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Runnable.html#run()" target="_blank">Runnable.run()</a></var></var> – действие</li><li><var>T <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Supplier.html#get()" target="_blank">Supplier&lt;T&gt;.get()</a></var></var> – получить объект</li><li><var>void <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Consumer.html#accept(T)" target="_blank">Consumer&lt;T&gt;.accept(t)</a></var></var> – действие над значением</li><li><var>R <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Function.html#apply(T)" target="_blank">Function&lt;T, R&gt;.apply(t)</a></var></var> – функция</li><li><var>void Log.log(message)</var></li></ul></li><li>Аннотация<ul class="item-2 level-2"><li><var>@<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/FunctionalInterface.html" target="_blank">FunctionalInterface</a></var></var></li><li>Необязательная</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">3</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Лямбда-выражения</h1><div class="body"><ul class="item-1 level-1"><li>Реализация функционального интерфейса<ul class="item-2 level-2"><li><var>R <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/BiFunction.html#apply(T,U)" target="_blank">BiFunction&lt;T, U, R&gt;.apply(t, u)</a></var></var> – бинарная функция</li><li><pre class="prettyprint lang-java">BiFunction&lt;String, Long, String&gt; f =
    (String s, Long v) -&gt; {
        return s + v;
    }
</pre></li><li><pre class="prettyprint lang-java">BiFunction&lt;String, Long, String&gt; f =
    (String s, Long v) -&gt; s + v;
</pre></li><li><pre class="prettyprint lang-java">BiFunction&lt;String, Long, String&gt; f = (s, v) -&gt; s + v;
</pre></li><li><pre class="prettyprint lang-java">Function&lt;String, String&gt; f = s -&gt; s + s;
</pre></li><li><pre class="prettyprint lang-java">Supplier&lt;String&gt; s = () -&gt; "!";
</pre></li><li><pre class="prettyprint lang-java">Consumer&lt;String&gt; c = s -&gt; System.out.println(s + s);
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">4</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Применение лямбда-выражений</h1><div class="body"><ul class="item-1 level-1"><li>Композиция<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">default &lt;V&gt; Function&lt;V, R&gt;
        compose(Function&lt;−V, +T&gt; before) {
    return v -&gt; apply(before.apply(v));
}
</pre></li></ul></li><li>Обратная композиция<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">default &lt;V&gt; Function&lt;T, V&gt;
        andThen(Function&lt;−R, +V&gt; after) {
    return v -&gt; after.apply(apply(v));
}
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">5</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Ссылки на методы</h1><div class="body"><ul class="item-1 level-1"><li>Метод класса<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">Function&lt;String, Integer&gt; f1 = Integer::parseInt;
// x -&gt; Integer.parseInt(x);
</pre></li></ul></li><li>Метод экземпляра<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">Function&lt;Integer, String&gt; f2 = Integer::toString;
// x -&gt; x.toString();
</pre></li></ul></li><li>Метод экземпляра объекта<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">Integer i = 2; // Не обязательно final
Supplier&lt;String&gt; f3 = i::toString; // () -&gt; i.toString();
</pre></li></ul></li><li>Конструктор<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">Function&lt;String, Integer&gt; f4 = Integer::new;
// s -&gt; new Integer(s);
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">6</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Замыкания</h1><div class="body"><ul class="item-1 level-1"><li>Effectively final переменные<ul class="item-2 level-2"><li>Ровно одно присваивание</li><li>Может быть без модификатора <var>final</var></li><li>Могут использоваться в лямбда-выражениях</li></ul></li><li>Замыкание → объект в куче<ul class="item-2 level-2"><li>Разные вызовы → разные объекты</li></ul></li><li>Пример<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">/* final */ String hello = "Hello, ";
Function&lt;String, String&gt; greeter = 
        name -&gt; hello + name;
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">7</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Ограничения лямбда-выражений</h1><div class="body"><ul class="item-1 level-1"><li>Захват изменяемых переменных</li><li>Прозрачный проброс исключений<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">// Не работает, так как write бросает IOException
Consumer&lt;String&gt; c = writer::write;
</pre></li></ul></li><li>Изменение потока управления<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">collection.forEach(e -&gt; {
    if (e.equals("done")) {
        // Что делать?
    }
});
</pre></li></ul></li><li>Реализация<ul class="item-2 level-2"><li>Лямбды — не классы</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">8</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример. Исключения ввода-вывода</h1><div class="body"><ul class="item-2 level-2"><li><pre class="prettyprint lang-java">@FunctionalInterface
interface IOSupplier&lt;T&gt; {
    T get() throws IOException;
    static &lt;T&gt; T unchecked(IOSupplier&lt;T&gt; supplier) {
        try {
            return supplier.get();
        } catch (IOException e) {
            throw new UncheckedIOException(e);
        }
    }
}
</pre></li><li><pre class="prettyprint lang-java">List&lt;String&gt; lines = IOSupplier.unchecked(() -&gt;
    Files.readAllLines(Path.of("input.txt")));
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">9</span></div></div></div></div>
<div class="slide section"><div class="content"><h1>Основные классы</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Лямбда-выражения</a></li><li><a href="#(10)" class="toc current">Основные классы</a></li><li><a href="#(17)" class="toc">Коллекции</a></li><li><a href="#(24)" class="toc">Потоки значений</a></li><li><a href="#(41)" class="toc">Реализация потоков</a></li><li><a href="#(66)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">10</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Функции</h1><div class="body"><ul class="item-1 level-1"><li>Функции <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Function.html" target="_blank">Function&lt;T, R&gt;</a></var> – <var>T ⇒ R</var><ul class="item-2 level-2"><li><var>f.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Function.html#apply(T)" target="_blank">apply(t)</a></var></var> – применение</li><li><var>f.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Function.html#compose(java.util.function.Function)" target="_blank">compose(g)</a></var></var>, <var>f.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Function.html#andThen(java.util.function.Function)" target="_blank">andThen(g)</a></var></var> – композиция</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Function.html#identity()" target="_blank">Function.identity()</a></var> – возвращает вход</li></ul></li><li>Предикаты <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Predicate.html" target="_blank">Predicate&lt;T&gt;</a></var> – <var>T ⇒ boolean</var><ul class="item-2 level-2"><li><var>p.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Predicate.html#test(T)" target="_blank">test(t)</a></var></var> – применение</li><li><var>p1.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Predicate.html#or(java.util.function.Predicate)" target="_blank">or(p2)</a></var></var>, <var>p1.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Predicate.html#and(java.util.function.Predicate)" target="_blank">and(p2)</a></var></var>, <var>p.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Predicate.html#negate()" target="_blank">negate()</a></var></var>, <var><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Predicate.html#not(java.util.function.Predicate)" target="_blank">Predicate.not(p)</a></var></var> – комбинаторы</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Predicate.html#isEqual(java.lang.Object)" target="_blank">Predicate.isEqual(o)</a></var> – предикат равенства</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">11</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Основные функц. интерфейсы</h1><div class="body"><ul class="item-1 level-1"><li>Операторы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/UnaryOperator.html" target="_blank">UnaryOperator&lt;T&gt;</a></var> – <var>T ⇒ T</var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/BinaryOperator.html" target="_blank">BinaryOperator&lt;T&gt;</a></var> – <var>(T, T) ⇒ T</var></li></ul></li><li>Производители/потребители<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Supplier.html" target="_blank">Supplier&lt;T&gt;</a></var> – <var>() ⇒ T</var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Consumer.html" target="_blank">Consumer&lt;T&gt;</a></var> – <var>T ⇒ void</var></li></ul></li><li>Удвоенные интерфейсы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/BiFunction.html" target="_blank">BiFunction&lt;T, U, R&gt;</a></var> – <var>(T, U) ⇒ R</var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/BiPredicate.html" target="_blank">BiPredicate&lt;T, U&gt;</a></var> – <var>(T, U) ⇒ boolean</var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/BiConsumer.html" target="_blank">BiConsumer&lt;T, U&gt;</a></var> – <var>(T, U) ⇒ void</var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">12</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Специализации для примитивов</h1><div class="body"><ul class="item-1 level-1"><li>Типы <var>int</var>, <var>long</var>, <var>double</var></li><li>Простые примеры<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/IntPredicate.html" target="_blank">IntPredicate</a></var> – <var>int ⇒ boolean</var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/IntFunction.html" target="_blank">IntFunction</a></var> – <var>int ⇒ T</var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/ToIntFunction.html" target="_blank">ToIntFunction</a></var> – <var>T ⇒ int</var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/IntUnaryOperator.html" target="_blank">IntUnaryOperator</a></var> – <var>int ⇒ int</var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/IntBinaryOperator.html" target="_blank">IntBinaryOperator</a></var> – <var>(int, int) ⇒ int</var></li></ul></li><li>Смешанные примеры<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/IntToDoubleFunction.html" target="_blank">IntToDoubleFunction</a></var> – <var>int ⇒ double</var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/ObjIntConsumer.html" target="_blank">ObjIntConsumer&lt;T&gt;</a></var> – <var>(T, int) ⇒ void</var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/ToIntBiFunction.html" target="_blank">ToIntBiFunction&lt;T, U&gt;</a></var> – <var>(T, U) ⇒ int</var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">13</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Типы-обертки</h1><div class="body"><ul class="item-1 level-1"><li>Преобразования<ul class="item-2 level-2"><li><var>T.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Integer.html#toString(int)" target="_blank">toString(t)</a></var></var> – примитив в строку</li><li><var>T.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Integer.html#hashCode(int)" target="_blank">hashCode(t)</a></var></var> – хэш примитива</li></ul></li><li>Агрегация<ul class="item-2 level-2"><li><var>T.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Integer.html#sum(int,int)" target="_blank">sum(t1, t2)</a></var></var> – сумма</li><li><var>T.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Integer.html#max(int,int)" target="_blank">max(t1, t2)</a></var></var> – максимум</li><li><var>T.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Integer.html#min(int,int)" target="_blank">min(t1, t2)</a></var></var> – минимум</li><li><var>T.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Integer.html#compare(int,int)" target="_blank">compare(t1, t2)</a></var></var> – сравнение</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">14</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Беззнаковые целые</h1><div class="body"><ul class="item-1 level-1"><li>Методы<ul class="item-2 level-2"><li><var>T.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Integer.html#toUnsignedString(int,int)" target="_blank">toUnsignedString(t, radix?)</a></var></var> – в строку</li><li><var>T.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Integer.html#parseUnsignedInt(java.lang.String,int)" target="_blank">parseUnsignedT(string, radix?)</a></var></var> – из строки</li><li><var>T.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Byte.html#toUnsignedInt(byte)" target="_blank">toUnsignedInt(t)</a></var></var>, <var>T.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Byte.html#toUnsignedLong(byte)" target="_blank">toUnsignedLong(t)</a></var></var> – расширение</li><li><var>T.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Integer.html#divideUnsigned(int,int)" target="_blank">divideUnsigned(t1, t2)</a></var></var> – деление</li><li><var>T.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Integer.html#remainderUnsigned(int,int)" target="_blank">remainderUnsigned(t1, t2)</a></var></var> – остаток</li><li><var>T.<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Integer.html#compareUnsigned(int,int)" target="_blank">compareUnsigned(t1, t2)</a></var></var> – сравнение</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">15</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Класс Objects</h1><div class="body"><ul class="item-1 level-1"><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Objects.html#equals(java.lang.Object,java.lang.Object)" target="_blank">equals(a, b)</a></var>, <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Objects.html#deepEquals(java.lang.Object,java.lang.Object)" target="_blank">deepEquals(a, b)</a></var> – сравнение</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Objects.html#hashCode(java.lang.Object)" target="_blank">hashCode(value)</a></var>, <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Objects.html#hash(java.lang.Object...)" target="_blank">hash(values...)</a></var> – хэширование</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Objects.html#isNull(java.lang.Object)" target="_blank">isNull(value)</a></var>, <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Objects.html#nonNull(java.lang.Object)" target="_blank">nonNull(value)</a></var> – проверка на <var>null</var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Objects.html#toString(java.lang.Object,java.lang.String)" target="_blank">toString(value, nullDefault?)</a></var> – в строку</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">16</span></div></div></div></div>
<div class="slide section"><div class="content"><h1>Коллекции</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Лямбда-выражения</a></li><li><a href="#(10)" class="toc">Основные классы</a></li><li><a href="#(17)" class="toc current">Коллекции</a></li><li><a href="#(24)" class="toc">Потоки значений</a></li><li><a href="#(41)" class="toc">Реализация потоков</a></li><li><a href="#(66)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">17</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Необязательные значения (1)</h1><div class="body"><ul class="item-1 level-1"><li>Классы <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html" target="_blank">Optional</a></var>{<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html" target="_blank">&lt;T&gt;</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/OptionalInt.html" target="_blank">Int</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/OptionalLong.html" target="_blank">Long</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/OptionalDouble.html" target="_blank">Double</a></var>}<ul class="item-2 level-2"><li>Значение не может быть <var>null</var></li></ul></li><li>Фабрики<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#empty()" target="_blank">empty()</a></var> – без значения</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#of(T)" target="_blank">of(t)</a></var>, <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#ofNullable(T)" target="_blank">ofNullable(t)</a></var> – из значения</li></ul></li><li>Получение значения<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#isPresent()" target="_blank">isPresent()</a></var>, <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#isEmpty()" target="_blank">isEmpty()</a></var> – есть ли значение</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#get()" target="_blank">get()</a></var>, <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#orElse(T)" target="_blank">orElse(t)</a></var> – получить значение</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#orElseGet(java.util.function.Supplier)" target="_blank">orElseGet(supplier&lt;+T&gt;)</a></var> – альтернативный источник</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#orElseThrow(java.util.function.Supplier)" target="_blank">orElseThrow(supplier&lt;+E&gt;)</a></var> – исключение</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">18</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Необязательные значения (2)</h1><div class="body"><ul class="item-1 level-1"><li>Обработка<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#ifPresent(java.util.function.Consumer)" target="_blank">ifPresent(consumer&lt;−T&gt;)</a></var> – значения</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#ifPresentOrElse(java.util.function.Consumer,java.lang.Runnable)" target="_blank">ifPresentOrElse(consumer&lt;−T&gt;, runnable)</a></var> – обоих вариантов</li></ul></li><li>Функции высшего порядка<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#filter(java.util.function.Predicate)" target="_blank">filter(predicate&lt;−T&gt;)</a></var> – фильтрация</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#map(java.util.function.Function)" target="_blank">map(function&lt;−T, +R&gt;)</a></var> – отображение</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#flatMap(java.util.function.Function)" target="_blank">flatMap(function&lt;−T, +Optional&lt;+R&gt;&gt;)</a></var> – отображение со схлопыванием</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">19</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Сравнения</h1><div class="body"><ul class="item-1 level-1"><li>Статические методы интерфейса <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Comparator.html" target="_blank">Comparator</a></var><ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Comparator.html#comparing(java.util.function.Function,java.util.Comparator)" target="_blank">comparingT(f, cmp?)</a></var> – сравнивать значения <var>f(o)</var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Comparator.html#thenComparing(java.util.function.Function,java.util.Comparator)" target="_blank">comparator.thenComparingT(f, cmp?)</a></var> – «лексикографический» порядок</li><li><var>nulls</var>{<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Comparator.html#nullsFirst(java.util.Comparator)" target="_blank">First</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Comparator.html#nullsLast(java.util.Comparator)" target="_blank">Last</a></var>}<var>(cmp)</var> – c порядком для <var>null</var></li></ul></li><li>Пример<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">courses.sort(
    Comparator.comparingInt(Course::getYear)
        .thenComparingInt(Course::getTerm)
        .thenComparing(
            Course::getName,
            String.CASE_INSENSITIVE_ORDER
))
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">20</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Коллекции</h1><div class="body"><ul class="item-1 level-1"><li>Обход<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Iterable.html#forEach(java.util.function.Consumer)" target="_blank">Iterable&lt;E&gt;.forEach(consumer&lt;−E&gt;)</a></var></li><li><pre class="prettyprint lang-java">courses.forEach(System.out::println);
</pre></li></ul></li><li>Удаление<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Collection.html#removeIf(java.util.function.Predicate)" target="_blank">Collection.removeIf(predicate&lt;−E&gt;)</a></var></li><li><pre class="prettyprint lang-java">courses.removeIf(Course::isDone);
</pre></li></ul></li><li>Преобразование в массив<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Collection.html#toArray(java.util.function.IntFunction)" target="_blank">Collection.toArray(intFunction&lt;E[]&gt;)</a></var></li><li><pre class="prettyprint lang-java">courses.toArray(Course[]::new);
</pre></li></ul></li><li>Замена<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/List.html#replaceAll(java.util.function.UnaryOperator)" target="_blank">List.replaceAll(unaryOperator&lt;E&gt;)</a></var></li><li><pre class="prettyprint lang-java">courses.replaceAll(Course::nextYear);
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">21</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Отображения</h1><div class="body"><ul class="item-1 level-1"><li>Обход<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Map.html#forEach(java.util.function.BiConsumer)" target="_blank">forEach(biConsumer&lt;−K, −V&gt;)</a></var></li></ul></li><li>Замена<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Map.html#replaceAll(java.util.function.BiFunction)" target="_blank">replaceAll(biFunction&lt;−K, −V, +V&gt;)</a></var></li></ul></li><li>Обновление<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Map.html#compute(K,java.util.function.BiFunction)" target="_blank">compute(k, biFunction&lt;−K, −V, +V&gt;)</a></var> – общее</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Map.html#computeIfAbsent(K,java.util.function.Function)" target="_blank">computeIfAbsent(k, function&lt;−K, +V&gt;)</a></var> – вставка</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Map.html#computeIfPresent(K,java.util.function.BiFunction)" target="_blank">computeIfPresent(k, biFunction&lt;−K, −V, +V&gt;)</a></var> – обновление</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Map.html#merge(K,V,java.util.function.BiFunction)" target="_blank">merge(k, v, biFunction&lt;−V, −V, +V&gt;)</a></var> – вставка или обновление</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">22</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример. Подсчет слов</h1><div class="body"><ul class="item-1 level-1"><li>Из <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Scanner.html" target="_blank">Scanner</a></var><ul class="item-2 level-2"><li><pre class="prettyprint lang-java">Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();
while (scanner.hasNext()) {
    map.merge(scanner.next(), 1, Integer::sum);
}
</pre></li></ul></li><li>Из файла<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();
Files.readAllLines(input).forEach(line -&gt; {
    for (String word : line.split("\\s+")) {
        map.merge(word, 1, Integer::sum);
    }
});
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">23</span></div></div></div></div>
<div class="slide section"><div class="content"><h1>Потоки значений</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Лямбда-выражения</a></li><li><a href="#(10)" class="toc">Основные классы</a></li><li><a href="#(17)" class="toc">Коллекции</a></li><li><a href="#(24)" class="toc current">Потоки значений</a><ol class="level-2 toc-2"><li><a href="#(26)" class="">Использование</a></li><li><a href="#(34)" class="">Коллекторы</a></li></ol></li><li><a href="#(41)" class="toc">Реализация потоков</a></li><li><a href="#(66)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">24</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Потоки значений</h1><div class="body"><ul class="item-1 level-1"><li>Классы <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html" target="_blank">Stream&lt;T&gt;</a></var>, {<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/IntStream.html" target="_blank">Int</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/LongStream.html" target="_blank">Long</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/DoubleStream.html" target="_blank">Double</a></var>}<var>Stream</var></li><li>Набор элементов, обрабатываемый оптом<ul class="item-2 level-2"><li>Может не хранить элементы</li><li>Может быть ленивым</li><li>Может быть бесконечным</li></ul></li><li>Получение<ul class="item-2 level-2"><li>Из коллекций и массивов</li><li>Генераторы</li><li>Строки из файлов и наборы файлов</li><li>Случайные потоки</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">25</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Использование</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Лямбда-выражения</a></li><li><a href="#(10)" class="toc">Основные классы</a></li><li><a href="#(17)" class="toc">Коллекции</a></li><li><a href="#(24)" class="toc current">Потоки значений</a><ol class="level-2 toc-2"><li><a href="#(26)" class=" current">Использование</a></li><li><a href="#(34)" class="">Коллекторы</a></li></ol></li><li><a href="#(41)" class="toc">Реализация потоков</a></li><li><a href="#(66)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">26</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Примеры использования потоков (1)</h1><div class="body"><ul class="item-1 level-1"><li><span class="question">Что вычисляется?</span><ul class="item-2 level-2"><li><pre class="prettyprint lang-java">string.stream()
    .filter(s -&gt; s.endsWith("s"))
    .mapToInt(String::length)
    .min();
</pre></li><li class="incremental"><div class="non-incremental">Длина самой короткой строки, оканчивающейся на <var>s</var></div></li></ul></li><li class="incremental"><div class="non-incremental"><span class="question">Что вычисляется?</span><ul class="item-2 level-2"><li><pre class="prettyprint lang-java">string.parallelStream()
    .filter(s -&gt; s.contains("a"))
    .sorted(String.CASE_INSENSITIVE_ORDER)
    .limit(3)
    .collect(Collectors.joining(", "));
</pre></li><li class="incremental"><div class="non-incremental">Три минимальных слова, содержащих <var>a</var></div></li></ul></div></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">27</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Операции над потоками</h1><div class="body"><ul class="item-1 level-1"><li>Создание</li><li>Промежуточные<ul class="item-2 level-2"><li>Порождают поток</li><li>Ленивые</li></ul></li><li>Завершающие<ul class="item-2 level-2"><li>Порождают значения</li><li>Жадные</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">28</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Создание потоков (1)</h1><div class="body"><ul class="item-1 level-1"><li>Из элементов<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#empty()" target="_blank">Stream.empty()</a></var> – пустой</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#ofNullable(T)" target="_blank">Stream.ofNullable(t)</a></var> – из элемента</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#of(T...)" target="_blank">Stream.of(t...)</a></var> – из элементов</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#builder()" target="_blank">Stream.builder()</a></var> – поэлементно</li></ul></li><li>Из генераторов<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#generate(java.util.function.Supplier)" target="_blank">Stream.generate(supplier)</a></var> – из производителя</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#iterate(T,java.util.function.UnaryOperator)" target="_blank">Stream.iterate(init, next)</a></var> – генерация</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#iterate(T,java.util.function.Predicate,java.util.function.UnaryOperator)" target="_blank">Stream.iterate(init, hasNext, next)</a></var> – генерация с условием</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">29</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Создание потоков (2)</h1><div class="body"><ul class="item-1 level-1"><li>Из коллекций<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Collection.html#stream()" target="_blank">collection.stream()</a></var> – обычный</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Collection.html#parallelStream()" target="_blank">collection.parallelStream()</a></var> – многопоточный</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Optional.html#stream()" target="_blank">optional.stream()</a></var> – из значения</li></ul></li><li>Из массивов<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Arrays.html#stream(T[],int,int)" target="_blank">Arrays.stream(t[], start?, end?)</a></var> – объектов и примитивов</li></ul></li><li>Ввод-вывод<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/io/BufferedReader.html#lines()" target="_blank">bufferedReader.lines()</a></var> – строки</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/nio/file/Files.html#lines(java.nio.file.Path,java.nio.charset.Charset)" target="_blank">Files.lines(path, charset?)</a></var> – строки файла</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/nio/file/Files.html#walk(java.nio.file.Path,int,java.nio.file.FileVisitOption...)" target="_blank">Files.walk(path, depth?, fileVisitOption...)</a></var> – обход</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/nio/file/Files.html#find(java.nio.file.Path,int,java.util.function.BiPredicate,java.nio.file.FileVisitOption...)" target="_blank">Files.find(path, depth, biP&lt;Path, BFA&gt;, fileVisitOption...)</a></var> – поиск</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">30</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Модификация потоков</h1><div class="body"><ul class="item-1 level-1"><li>Ограничение<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#limit(long)" target="_blank">stream.limit(n)</a></var> – первые <var>n</var> элементов</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#skip(long)" target="_blank">stream.skip(n)</a></var> – без первых <var>n</var> элементов</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#takeWhile(java.util.function.Predicate)" target="_blank">stream.takeWhile(predicate)</a></var> – префикс по условию</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#dropWhile(java.util.function.Predicate)" target="_blank">stream.dropWhile(predicate)</a></var> – суффикс по условию</li></ul></li><li>Прочее<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#concat(java.util.stream.Stream,java.util.stream.Stream)" target="_blank">Stream.concat(s1, s2)</a></var> – конкатенация</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#distinct()" target="_blank">stream.distinct()</a></var> – удаление дубликатов</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#sorted(java.util.Comparator)" target="_blank">stream.sorted(comparator?)</a></var> – сортировка</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/IntStream.html#boxed()" target="_blank">TStream.boxed()</a></var> – примитив → обертка</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">31</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Комбинаторы</h1><div class="body"><ul class="item-1 level-1"><li>Фильтр по предикату<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#filter(java.util.function.Predicate)" target="_blank">stream.filter(predicate&lt;−T&gt;)</a></var></li></ul></li><li>Преобразование элементов<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#map(java.util.function.Function)" target="_blank">stream.map(function&lt;−T, +R&gt;)</a></var> – в объект</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#mapToInt(java.util.function.ToIntFunction)" target="_blank">stream.mapToT(function)</a></var> – в примитивный тип</li></ul></li><li>Преобразование со схлопыванием (bind)<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#flatMap(java.util.function.Function)" target="_blank">stream.flatMap(function&lt;−T, +Stream&lt;+R&gt;&gt;)</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#flatMapToInt(java.util.function.Function)" target="_blank">stream.flatMapToT(toIntStream)</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#mapMulti(java.util.function.BiConsumer)" target="_blank">mapMulti(biConsumer&lt;-T, -Consumer&lt;R&gt;&gt;)</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">32</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Получение результата</h1><div class="body"><ul class="item-1 level-1"><li>Завершающие операции</li><li>Проверка предиката<ul class="item-2 level-2"><li><var>stream.</var>{<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#allMatch(java.util.function.Predicate)" target="_blank">all</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#anyMatch(java.util.function.Predicate)" target="_blank">any</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#noneMatch(java.util.function.Predicate)" target="_blank">none</a></var>}<var>Match(predicate&lt;−T&gt;)</var></li></ul></li><li>Поиск<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#findFirst()" target="_blank">findFirst()</a></var>, <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#findAny()" target="_blank">findAny()</a></var></li></ul></li><li>Статистика<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#count()" target="_blank">count()</a></var>, <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#min(java.util.Comparator)" target="_blank">min(comparator&lt;−T&gt;)</a></var>, <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#max(java.util.Comparator)" target="_blank">max(comparator&lt;−T&gt;)</a></var></li></ul></li><li>Значения<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#toArray(java.util.function.IntFunction)" target="_blank">toArray(intFunction&lt;T[]&gt;)</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#forEach(java.util.function.Consumer)" target="_blank">forEach</a></var>[<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#forEachOrdered(java.util.function.Consumer)" target="_blank">Ordered</a></var>]<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#forEach(java.util.function.Consumer)" target="_blank">(Consumer&lt;−T&gt;)</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/BaseStream.html#iterator()" target="_blank">iterator()</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">33</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Коллекторы</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Лямбда-выражения</a></li><li><a href="#(10)" class="toc">Основные классы</a></li><li><a href="#(17)" class="toc">Коллекции</a></li><li><a href="#(24)" class="toc current">Потоки значений</a><ol class="level-2 toc-2"><li><a href="#(26)" class="">Использование</a></li><li><a href="#(34)" class=" current">Коллекторы</a></li></ol></li><li><a href="#(41)" class="toc">Реализация потоков</a></li><li><a href="#(66)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">34</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Коллекторы</h1><div class="body"><ul class="item-1 level-1"><li>Интерфейс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collector.html" target="_blank">Collector&lt;T, A, R&gt;</a></var><ul class="item-2 level-2"><li><var>T</var> — вход</li><li><var>A</var> — промежуточное состояние</li><li><var>R</var> — выход</li></ul></li><li>Завершающая операция<ul class="item-2 level-2"><li><var>R <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#collect(java.util.stream.Collector)" target="_blank">stream.collect(collector&lt;T, A, R&gt;)</a></var></var></li></ul></li><li>Фабрика коллекторов<ul class="item-2 level-2"><li>Класс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html" target="_blank">Collectors</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">35</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Статистика</h1><div class="body"><ul class="item-1 level-1"><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#counting()" target="_blank">counting()</a></var> - число элементов</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#summingInt(java.util.function.ToIntFunction)" target="_blank">summingT(f)</a></var> – сумма</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#averagingInt(java.util.function.ToIntFunction)" target="_blank">averagingT(f)</a></var> – среднее</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#summarizingInt(java.util.function.ToIntFunction)" target="_blank">summarizingT(f)</a></var> – полная статистика</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#minBy(java.util.Comparator)" target="_blank">minBy(cmp)</a></var>, <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#maxBy(java.util.Comparator)" target="_blank">maxBy(cmp)</a></var> – экстремумы</li></ul></li><li>Классы {<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/IntSummaryStatistics.html" target="_blank">Int</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/LongSummaryStatistics.html" target="_blank">Long</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/DoubleSummaryStatistics.html" target="_blank">Double</a></var>}<var>SummaryStatistics</var><ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/IntSummaryStatistics.html#getCount()" target="_blank">getCount()</a></var>, <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/IntSummaryStatistics.html#getSum()" target="_blank">getSum()</a></var>, <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/IntSummaryStatistics.html#getAverage()" target="_blank">getAverage()</a></var> – статистика</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/IntSummaryStatistics.html#getMin()" target="_blank">getMin()</a></var>, <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/IntSummaryStatistics.html#getMax()" target="_blank">getMax()</a></var> – экстремумы</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/IntSummaryStatistics.html#accept(int)" target="_blank">accept(value)</a></var> – добавить</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/IntSummaryStatistics.html#combine(java.util.IntSummaryStatistics)" target="_blank">combine(statistics)</a></var> – объединить</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">36</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Преобразование в коллекцию</h1><div class="body"><ul class="item-1 level-1"><li>Целиком<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#toCollection(java.util.function.Supplier)" target="_blank">toCollection(supplier&lt;Collection&lt;T&gt;&gt;)</a></var> – произвольная</li><li><var>to</var>[<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#toUnmodifiableList()" target="_blank">Unmodifiable</a></var>]<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#toList()" target="_blank">List()</a></var> – список</li><li><var>to</var>[<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#toUnmodifiableSet()" target="_blank">Unmodifiable</a></var>]<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#toSet()" target="_blank">Set()</a></var> – множество</li><li><var>to</var>[<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#toUnmodifiableMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)" target="_blank">Unmodifiable</a></var>]<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#toMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)" target="_blank">Map(keyF, valueF, mergeF?, mapS?)</a></var> – отображение</li></ul></li><li>Группировки<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Map.html" target="_blank">Map&lt;K, T&gt;</a></var> <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#groupingBy(java.util.function.Function,java.util.function.Supplier,java.util.stream.Collector)" target="_blank">groupingBy(keyF, mapFact?, downstream?)</a></var> – по ключу</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Map.html" target="_blank">Map&lt;Boolean, R&gt;</a></var> <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#partitioningBy(java.util.function.Predicate,java.util.stream.Collector)" target="_blank">partitioningBy(predicate&lt;−T&gt;, downstream?)</a></var> – разбиение</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">37</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример. Подсчет слов</h1><div class="body"><ul class="item-1 level-1"><li>В тексте<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">Map&lt;String, Long&gt; map = words.stream()
    .collect(Collectors.groupingBy(
        String::toUpperCase,
        Collectors.counting()
    ));
</pre></li></ul></li><li>В файле<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">Map&lt;String, Long&gt; map = Files.lines(path)
    .flatMap(line -&gt; Arrays.stream(line.split("\\s+"))
    .collect(Collectors.groupingBy(
        String::toUpperCase,
        Collectors.counting()
    ));
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">38</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Комбинаторы</h1><div class="body"><ul class="item-1 level-1"><li>Значения<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#mapping(java.util.function.Function,java.util.stream.Collector)" target="_blank">mapping(f, downstream)</a></var> – преобразовать</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#flatMapping(java.util.function.Function,java.util.stream.Collector)" target="_blank">flatMapping(f, downstream)</a></var> – преобразовать со схлопыванием</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#filtering(java.util.function.Predicate,java.util.stream.Collector)" target="_blank">filtering(p, downstream)</a></var> – отфильтровать</li></ul></li><li>Результаты<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#collectingAndThen(java.util.stream.Collector,java.util.function.Function)" target="_blank">collectingAndThen(downstream, f)</a></var> – преобразовать</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">39</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Преобразование в строку</h1><div class="body"><ul class="item-1 level-1"><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#joining()" target="_blank">joining()</a></var> – без разделителя</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collectors.html#joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)" target="_blank">joining(delimiter, prefix?, suffix?)</a></var> – с разделителем</li></ul></li><li>Пример<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">words.stream()
    .collect(Collectors.joining(", ", "{", "}"));
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">40</span></div></div></div></div>
<div class="slide section"><div class="content"><h1>Реализация потоков</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Лямбда-выражения</a></li><li><a href="#(10)" class="toc">Основные классы</a></li><li><a href="#(17)" class="toc">Коллекции</a></li><li><a href="#(24)" class="toc">Потоки значений</a></li><li><a href="#(41)" class="toc current">Реализация потоков</a><ol class="level-2 toc-2"><li><a href="#(42)" class="">Разбиваемые итераторы</a></li><li><a href="#(56)" class="">Свёртки</a></li></ol></li><li><a href="#(66)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">41</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Разбиваемые итераторы</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Лямбда-выражения</a></li><li><a href="#(10)" class="toc">Основные классы</a></li><li><a href="#(17)" class="toc">Коллекции</a></li><li><a href="#(24)" class="toc">Потоки значений</a></li><li><a href="#(41)" class="toc current">Реализация потоков</a><ol class="level-2 toc-2"><li><a href="#(42)" class=" current">Разбиваемые итераторы</a></li><li><a href="#(56)" class="">Свёртки</a></li></ol></li><li><a href="#(66)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">42</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Разбиваемые итераторы</h1><div class="body"><ul class="item-1 level-1"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html" target="_blank">Spliterator&lt;T&gt;</a></var><ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html" target="_blank">Spliterator&lt;T&gt;</a></var> <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#trySplit()" target="_blank">trySplit()</a></var> – разбить на две части</li><li><var>boolean</var> <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#tryAdvance(java.util.function.Consumer)" target="_blank">tryAdvance(consumer)</a></var> – обработать один элемент</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#forEachRemaining(java.util.function.Consumer)" target="_blank">forEachRemaining(consumer)</a></var> – обработать все элементы</li><li><var>long</var> <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#estimateSize()" target="_blank">estimateSize()</a></var> / <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#getExactSizeIfKnown()" target="_blank">getExactSizeIfKnown()</a></var> – размер</li><li><var>int</var> <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#characteristics()" target="_blank">characteristics()</a></var> / <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#hasCharacteristics(int)" target="_blank">hasCharacteristics(int)</a></var> – свойства</li></ul></li><li>Время связывания<ul class="item-2 level-2"><li>Создание <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html" target="_blank">Spliterator</a></var> (раннее)</li><li>Исполнение завершающей операции (позднее)</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">43</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Иерархия изменяемости</h1><div class="body"><ul class="item-1 level-1"><li>Неизменяемый (<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/String.html#lines()" target="_blank">string.lines()</a></var>)</li><li>Управляющий изменениями (<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/ConcurrentSkipListSet.html" target="_blank">ConcurrentSkipListSet</a></var>)</li><li>С детекцией изменений<ul class="item-2 level-2"><li>Раннее связывание</li><li>Позднее связывание (<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/ArrayList.html" target="_blank">ArrayList</a></var>)</li></ul></li><li>Без детекции изменений<ul class="item-2 level-2"><li>Раннее связывание (<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/CopyOnWriteArrayList.html" target="_blank">CopyOnWriteArrayList</a></var>)</li><li>Позднее связывание</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">44</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Детекция изменений</h1><div class="body"><ul class="item-1 level-1"><li><span class="question">Как бы вы реализовали?</span></li><li class="incremental"><div class="non-incremental">Счётчик <var>modCount</var><ul class="item-2 level-2"><li>Копируется при создании <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html" target="_blank">Spliterator</a></var></li><li>Увеличивается при изменении</li><li>Проверяется при доступе</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/ConcurrentModificationException.html" target="_blank">ConcurrentModificationException</a></var></li></ul></div></li><li class="incremental"><div class="non-incremental">Итераторы<ul class="item-2 level-2"><li><span class="question">Что делать с <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Iterator.html#remove()" target="_blank">remove()</a></var>?</span></li><li class="incremental"><div class="non-incremental">Обновить <var>modCount</var> итератора</div></li></ul></div></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">45</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Обработка изменений</h1><div class="body"><ul class="item-1 level-1"><li>Неизменяемый<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#IMMUTABLE" target="_blank">IMMUTABLE</a></var></li></ul></li><li>Последовательно изменяемый<ul class="item-2 level-2"><li>Явная политика связывания</li><li>Явная политика обработки изменений</li></ul></li><li>Параллельно изменяемый<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#CONCURRENT" target="_blank">CONCURRENT</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">46</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Свойства элементов</h1><div class="body"><ul class="item-1 level-1"><li>Харарактеристики<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#ORDERED" target="_blank">ORDERED</a></var> – элементы упорядочены<ul class="item-3 level-3"><li>Пример: <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/List.html" target="_blank">List</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#trySplit()" target="_blank">trySplit()</a></var> возвращает префикс</li></ul></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#DISTINCT" target="_blank">DISTINCT</a></var> – все элементы различны<ul class="item-3 level-3"><li>Пример: <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Set.html" target="_blank">Set</a></var></li></ul></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#SORTED" target="_blank">SORTED</a></var> – элементы отсортированы по <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#getComparator()" target="_blank">getComparator()</a></var><ul class="item-3 level-3"><li>Пример: <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/SortedSet.html" target="_blank">SortedSet</a></var></li></ul></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#NONNULL" target="_blank">NONNULL</a></var> – не содержит <var>null</var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">47</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Число элементов</h1><div class="body"><ul class="item-1 level-1"><li>Харарактеристики<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#SIZED" target="_blank">SIZED</a></var> – знает размер</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#SUBSIZED" target="_blank">SUBSIZED</a></var> – дети будут знать свой размер</li></ul></li><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#estimateSize()" target="_blank">estimateSize()</a></var> – значение или <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Long.html#MAX_VALUE" target="_blank">MAX_VALUE</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#getExactSizeIfKnown()" target="_blank">getExactSizeIfKnown()</a></var> – значение или <var>-1</var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">48</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Специализация для примитивов</h1><div class="body"><ul class="item-1 level-1"><li>Итераторы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/PrimitiveIterator.html" target="_blank">PrimitiveIterator&lt;T, T_CONSUMER&gt;</a></var></li></ul></li><li>Разбиваемые итераторы<ul class="item-2 level-2"><li><var>Spliterator.Of</var>{<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.OfInt.html" target="_blank">Int</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.OfLong.html" target="_blank">Long</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.OfDouble.html" target="_blank">Double</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.OfPrimitive.html" target="_blank">Primitive</a></var>}</li><li>Используют {<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/IntConsumer.html" target="_blank">Int</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/LongConsumer.html" target="_blank">Long</a></var>|<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/DoubleConsumer.html" target="_blank">Double</a></var>}<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/DoubleConsumer.html" target="_blank">Consumer</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">49</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример: ArrayMap (1)</h1><div class="body"><ul class="item-1 level-1"><li><var>ArrayMap</var><ul class="item-2 level-2"><li><var>Object[] entries</var></li><li>Хранит пары ключ-значение в <var>2i</var> и <var>2i+1</var> элементах</li><li><pre class="prettyprint lang-java">public boolean tryAdvance(
    Consumer&lt;? super Entry&lt;K, V&gt;&gt; action
) {
    checkForComodification();
    if (i &lt; bound) {
        action.accept(entry(i += 2));
        return true;
    }
    return false;
}
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">50</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример: ArrayMap (2)</h1><div class="body"><ul class="item-1 level-1"><li><var>ArrayMap</var><ul class="item-2 level-2"><li><var>Object[] entries</var></li><li>Хранит пары ключ-значение в <var>2i</var> и <var>2i+1</var> элементах</li><li><pre class="prettyprint lang-java">public Spliterator&lt;Entry&lt;K, V&gt;&gt; trySplit() {
    checkForComodification();
    final int left = i;
    final int mid = (left + bound) / 4 * 2;
    if (i &lt; mid) {
        i = mid;
        return new Spliter(left, mid);
    }
    return null;
}
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">51</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Создание Spliterator</h1><div class="body"><ul class="item-1 level-1"><li>Класс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterators.html" target="_blank">Spliterators</a></var><ul class="item-2 level-2"><li>Пустой <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterators.html#emptySpliterator()" target="_blank">emptySpliterator()</a></var></li><li>Из массива <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterators.html#spliterator(java.lang.Object[],int)" target="_blank">spliterator(array, characteristics)</a></var></li><li>Из коллекци <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterators.html#spliterator(java.util.Collection,int)" target="_blank">spliterator(collection, characteristics)</a></var></li><li>Из итератора<ul class="item-3 level-3"><li>С размером <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterators.html#spliterator(java.util.Iterator,long,int)" target="_blank">spliterator(iterator, size, characteristics)</a></var></li><li>Без размера <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterators.html#spliteratorUnknownSize(java.util.Iterator,int)" target="_blank">spliteratorUnknownSize(iterator, characteristics)</a></var></li></ul></li><li>В итератор <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterators.html#iterator(java.util.Spliterator)" target="_blank">iterator(spliterator)</a></var></li></ul></li><li>Примитивные специализации методов</li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">52</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Потоки из Spliterator</h1><div class="body"><ul class="item-1 level-1"><li>Класс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/StreamSupport.html" target="_blank">StreamSupport</a></var><ul class="item-2 level-2"><li>Раннее связывание <br ignore="ignore" /><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/StreamSupport.html#stream(java.util.Spliterator,boolean)" target="_blank">stream(spliterator&lt;T&gt;, parallel)</a></var></li><li>Позднее связывание <br ignore="ignore" /><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/StreamSupport.html#stream(java.util.function.Supplier,int,boolean)" target="_blank">stream(supplier, characteristics, parallel)</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">53</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример: своя операция (1)</h1><div class="body"><ul class="item-1 level-1"><li>Сгруппировать элементы по <var>n</var> штук<ul class="item-2 level-2"><li>Использование <pre class="prettyprint lang-java">// [[a, b, c], [d]]
chunked(List.of("a", "b", "c", "d", 3))
</pre></li><li>Реализация <pre class="prettyprint lang-java">Stream&lt;List&lt;T&gt;&gt; chunked(Stream&lt;+T&gt; stream, int n) {
    Spliterator&lt;+T&gt; spliterator = stream.spliterator();
    return StreamSupport.stream(
        new Spliterators.AbstractSpliterator&lt;&gt;(
                (spliterator.estimateSize() + n - 1) / n,
                spliterator.characteristics() 
                    &amp; ~Spliterator.SORTED
                    | Spliterator.NONNULL
        )
    );
}
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">54</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример: своя операция (2)</h1><div class="body"><ul class="item-1 level-1"><li>Сгруппировать элементы по <var>n</var> штук<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">boolean tryAdvance(Consumer&lt;-List&lt;T&gt;&gt; action) {
    final List&lt;T&gt; chunk = new ArrayList&lt;&gt;();
    while (chunk.size() &lt; n &amp;&amp; 
        spliterator.tryAdvance(chunk::add)) {
    }
    if (!chunk.isEmpty()) {
        action.accept(chunk);
    }
    return !chunk.isEmpty();
}
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">55</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Свёртки</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Лямбда-выражения</a></li><li><a href="#(10)" class="toc">Основные классы</a></li><li><a href="#(17)" class="toc">Коллекции</a></li><li><a href="#(24)" class="toc">Потоки значений</a></li><li><a href="#(41)" class="toc current">Реализация потоков</a><ol class="level-2 toc-2"><li><a href="#(42)" class="">Разбиваемые итераторы</a></li><li><a href="#(56)" class=" current">Свёртки</a></li></ol></li><li><a href="#(66)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">56</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Обобщенные свёртки</h1><div class="body"><ul class="item-1 level-1"><li>Завершающие операции</li><li>Ассоциативная<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#reduce(U,java.util.function.BiFunction,java.util.function.BinaryOperator)" target="_blank">reduce(zeroU, biFunction&lt;U, −T&gt;, op)</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#reduce(java.util.function.BinaryOperator)" target="_blank">reduce(op)</a></var></li></ul></li><li>Произвольная с состоянием<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Stream.html#collect(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BiConsumer)" target="_blank">collect(supplier&lt;R&gt;, biConsumer&lt;R, −T&gt;, biConsumer&lt;R, R&gt;)</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">57</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Общая идея</h1><div class="body"><ul class="item-1 level-1"><li>Разбить на куски<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Spliterator.html#trySplit()" target="_blank">trySplit()</a></var></li></ul></li><li class="incremental"><div class="non-incremental">Последовательно обработать кусок<ul class="item-2 level-2"><li><var>zero: () → A</var></li><li><var>op: (A, T) → A</var></li><li><var>(...((zero() op v0) op v1) ... op vn)</var></li></ul></div></li><li class="incremental"><div class="non-incremental">Склеить результаты кусков<ul class="item-2 level-2"><li><var>combine: (A, A) → A</var></li></ul></div></li><li class="incremental"><div class="non-incremental">Получить результат<ul class="item-2 level-2"><li><var>finisher: A → R</var></li></ul></div></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">58</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Коллекторы</h1><div class="body"><ul class="item-1 level-1"><li>Интерфейс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collector.html" target="_blank">Collector&lt;T, A, R&gt;</a></var></li><li>Свёртка<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Supplier.html" target="_blank">Supplier&lt;A&gt;</a></var> <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collector.html#supplier()" target="_blank">supplier()</a></var> – новый аккумулятор</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/BiConsumer.html" target="_blank">BiConsumer&lt;A, T&gt;</a></var> <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collector.html#accumulator()" target="_blank">accumulator()</a></var> – обновление</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/BinaryOperator.html" target="_blank">BinaryOperator&lt;A&gt;</a></var> <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collector.html#combiner()" target="_blank">combiner()</a></var> – объединение</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/function/Function.html" target="_blank">Function&lt;A, R&gt;</a></var> <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collector.html#finisher()" target="_blank">finisher()</a></var> – результат</li></ul></li><li>Характеристики<ul class="item-2 level-2"><li><var><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Set.html" target="_blank">Set</a></var>&lt;<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collector.Characteristics.html" target="_blank">Characteristics</a></var>&gt;</var> <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collector.html#characteristics()" target="_blank">characteristics()</a></var> – свойства</li></ul></li><li>Фабрика<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/stream/Collector.html#of(java.util.function.Supplier,java.util.function.BiConsumer,java.util.function.BinaryOperator,java.util.function.Function,java.util.stream.Collector.Characteristics...)" target="_blank">Collector.of(supplier, accumulator, combiner, finisher?, characteristics...)</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">59</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Параллельное исполнение</h1><div class="body"><ul class="item-1 level-1"><li>Явное состояния<ul class="item-2 level-2"><li>Только в <var>A</var></li></ul></li><li>Невмешательство (non-iterference)<ul class="item-2 level-2"><li>Нельзя изменять обрабатываемые данные</li></ul></li><li>Без побочных эффектов<ul class="item-2 level-2"><li>Нельзя изменять контекст</li></ul></li><li>Упорядоченность<ul class="item-2 level-2"><li>Результат – упорядочен</li><li>Вызовы – нет</li></ul></li><li>Повторное использование<ul class="item-2 level-2"><li>Значение используется один раз</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">60</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример коллектора (1)</h1><div class="body"><ul class="item-1 level-1"><li>Существование элемента<ul class="item-3 level-3"><li><pre class="prettyprint lang-java">&lt;T&gt; Collector&lt;T, ?, Boolean&gt; has(Predicate&lt;-T&gt; p) {
    class State {
        boolean found;
    }
    return Collector.of(
            State::new,
            (state, e) -&gt; state.found |= p.test(e),
            (state1, state2) -&gt; {
                state1.found |= state2.found;
                return state1;
            },
            state -&gt; state.found
    );
}
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">61</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример коллектора (2)</h1><div class="body"><ul class="item-1 level-1"><li>Получение минимальных имени и фамилии<ul class="item-3 level-3"><li><pre class="prettyprint lang-java">Collector&lt;Student, String[], Student&gt;
    MIN_NAMES = Collector.of(
        () -&gt; new String[2],
        (mins, student) -&gt; {
            mins[0] = min(mins[0], student.getFirstName());
            mins[1] = min(mins[1], student.getLastName());
        },
        (mins1, mins2) -&gt; {
            mins1[0] = min(mins1[0], mins2[0]);
            mins1[1] = min(mins1[1], mins2[1]);
            return mins1;
        },
        mins -&gt; new Student(mins[0], mins[1])
    );
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">62</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример коллектора (3)</h1><div class="body"><ul class="item-1 level-1"><li>Объединение коллекторов (1)<ul class="item-3 level-3"><li><pre class="prettyprint lang-java">&lt;T, F, S, FA, SA&gt; 
Collector&lt;T, Pair&lt;FA, SA&gt;, Pair&lt;F, S&gt;&gt; tee(
    Collector&lt;T, FA, F&gt; c1, Collector&lt;T, SA, S&gt; c2
) {
    return Collector.of(
        () -&gt; new Pair&lt;&gt;( // supplier
            c1.supplier().get(), 
            c2.supplier().get()
        ),
        (state, value) -&gt; { // accumulator
            c1.accumulator().accept(state.v1, value);
            c2.accumulator().accept(state.v2, value);
        },
        (state1, state2) -&gt; new Pair&lt;&gt;( // combiner
            c1.combiner().apply(state1.v1, state2.v1),
            c2.combiner().apply(state1.v2, state2.v2)
        ),
        state -&gt; new Pair&lt;&gt;( // finisher
            c1.finisher().apply(state.v1),
            c2.finisher().apply(state.v2)
        )
    );
}
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">63</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример коллектора (3)</h1><div class="body"><ul class="item-1 level-1"><li>Объединение коллекторов (2)<ul class="item-3 level-3"><li><pre class="prettyprint lang-java">(state1, state2) -&gt; new Pair&lt;&gt;( // combiner
    c1.combiner().apply(state1.v1, state2.v1),
    c2.combiner().apply(state1.v2, state2.v2)
),
state -&gt; new Pair&lt;&gt;( // finisher
    c1.finisher().apply(state.v1),
    c2.finisher().apply(state.v2)
)
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">64</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Пример коллектора (3)</h1><div class="body"><ul class="item-1 level-1"><li>Объединение коллекторов (3)<ul class="item-3 level-3"><li><pre class="prettyprint lang-java">tee(
    Collectors.mapping(Student::firstName, 
        Collectors.minBy(Comparator.naturalOrder())),
    Collectors.mapping(Student::lastName, 
        Collectors.minBy(Comparator.naturalOrder()))
)
</pre></li></ul></li><li>Стандартный коллектор<ul class="item-3 level-3"><li><pre class="prettyprint lang-java">teeing(
    mapping(Student::firstName, minBy(naturalOrder())),
    mapping(Student::lastName, minBy(naturalOrder())),
    (Optional&lt;String&gt; first, Optional&lt;String&gt; last) -&gt; 
        first.flatMap(f -&gt; last.map(l -&gt; new Student(f, l)))
)
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">65</span></div></div></div></div>
<div class="slide section"><div class="content"><h1>Заключение</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Лямбда-выражения</a></li><li><a href="#(10)" class="toc">Основные классы</a></li><li><a href="#(17)" class="toc">Коллекции</a></li><li><a href="#(24)" class="toc">Потоки значений</a></li><li><a href="#(41)" class="toc">Реализация потоков</a></li><li><a href="#(66)" class="toc current">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">66</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Что еще есть в java.util (1)</h1><div class="body"><ul class="item-1 level-1"><li>Битовые множества<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/BitSet.html" target="_blank">BitSet</a></var></li></ul></li><li>Регулярные выражения<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/regex/Pattern.html" target="_blank">Pattern</a></var></li></ul></li><li>Обработка событий<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/EventListener.html" target="_blank">EventListener</a></var></li></ul></li><li>Таймеры<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Timer.html" target="_blank">Timer</a></var> / <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/TimerTask.html" target="_blank">TimerTask</a></var></li></ul></li><li>Дата и время<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Date.html" target="_blank">Date</a></var> / <var>*<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Calendar.html" target="_blank">Calendar</a></var></var> / <var>*<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/TimeZone.html" target="_blank">TimeZone</a></var></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">67</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Что еще есть в java.util (2)</h1><div class="body"><ul class="item-1 level-1"><li>Случайные генераторы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Random.html" target="_blank">Random</a></var>, <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/SplittableRandom.html" target="_blank">SplittableRandom</a></var></li></ul></li><li>Поддержка Base64<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Base64.html" target="_blank">Base64</a></var></li></ul></li><li>Поддержка UUID<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/UUID.html" target="_blank">UUID</a></var></li></ul></li><li>Загрузка сервисов<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/ServiceLoader.html" target="_blank">ServiceLoader</a></var></li></ul></li><li>Локализация и интернационализация<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Locale.html" target="_blank">Locale</a></var> / <var>*<var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/ResourceBundle.html" target="_blank">ResourceBundle</a></var></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">68</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Ссылки</h1><div class="body"><ul class="item-1 level-1"><li>Lambda Expressions // <a href="https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html" target="_blank">https://docs.oracle.com/javase/tutorial/java<br />/javaOO/lambdaexpressions.html</a></li><li>Method References // <a href="https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html" target="_blank">https://docs.oracle.com/javase/tutorial/java<br />/javaOO/methodreferences.html</a></li><li>Aggregate Operations (Streams) // <a href="https://docs.oracle.com/javase/tutorial/collections/streams/index.html" target="_blank">https://docs.oracle.com/javase/tutorial/collections<br />/streams/index.html</a></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">69</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Вопросы</h1><div class="body"><div class="questions">???</div></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Лямбда-выражения и потоки</span><span class="number">70</span></div></div></div></div></div></body></html>