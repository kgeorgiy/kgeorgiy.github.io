<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="ru" xml:lang="ru" xmlns="http://www.w3.org/1999/xhtml"><head><title>Технологии Java / Задачи и средства многопоточного программирования</title><meta name="author" content="" /><link rel="stylesheet" type="text/css" media="screen, projection, print" href="scripts/slidy.css" /><link rel="stylesheet" type="text/css" href="scripts/prettify.css" /><link rel="stylesheet" type="text/css" href="scripts/kgeorgiy-slides.css" /><script type="text/javascript" src="scripts/slidy.js" charset="utf-8" /><script type="text/javascript" src="scripts/kgeorgiy-slides.js" charset="utf-8" /><script type="text/javascript" src="scripts/prettify.js" /><script type="text/javascript" src="scripts/lang-sql.js" /><script type="text/javascript" src="scripts/lang-javaModule.js" /><script type="text/javascript" src="scripts/lang-scala.js" /><script>var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-37693764-1"]);_gaq.push(["_setDomainName","kgeorgiy.info"]);_gaq.push(["_trackPageview"]);(function(){var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var b=document.getElementsByTagName("script")[0];b.parentNode.insertBefore(a,b)})();</script><script async="async" src="https://www.googletagmanager.com/gtag/js?id=G-8EQ66D87ZZ" /><script>
                  window.dataLayer = window.dataLayer || [];
                  function gtag(){dataLayer.push(arguments);}
                  gtag('js', new Date());

                  gtag('config', 'G-8EQ66D87ZZ');
                </script></head><body onload="prettyPrint()"><div id="all">
<div class="slide cover"><div class="content"><div class="course">Технологии Java</div><hr /><div class="lecture"><div>Задачи и средства многопоточного программирования</div></div><div class="link"><a href="https://kgeorgiy.info/courses/java-advanced/">https://kgeorgiy.info/courses/java-advanced/</a></div><div class="copyright"><a href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.ru"><span class="copyright">Copyright © Georgiy Korneev</span><img src="scripts/by-nc-sa.png" alt="Attribution-NonCommercial-ShareAlike" /></a></div></div></div>
<div class="slide section"><div class="content"><h1>Классические задачи</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc current">Классические задачи</a></li><li><a href="#(8)" class="toc">Атомарные операции</a></li><li><a href="#(25)" class="toc">Примитивы синхронизации</a></li><li><a href="#(52)" class="toc">Решение классических задач</a></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">2</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Задача доступа к общему ресурсу</h1><div class="body"><ul class="item-1 level-1"><li>Несколько потоков обращаются к общему ресурсу </li></ul><div class="img-width"><img class="width" style="width: 75%" src="pics/ThreadsCommonResource.svg" /></div></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">3</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Производитель-потребитель</h1><div class="body"><ul class="item-1 level-1"><li>Несколько потоков производят данные</li><li>Несколько потоков потребляют данные</li><li>Данные могут храниться в очереди (не)ограниченного объема </li></ul><div class="img-width"><img class="width" style="width: 75%" src="pics/ThreadsProducerConsumer.svg" /></div></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">4</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Задача о читателях и писателях</h1><div class="body"><ul class="item-1 level-1"><li>Читать могут много потоков одновременно</li><li>Писать может только один поток</li><li>Читать во время записи нельзя </li></ul><div class="img-width"><img class="width" style="width: 70%" src="pics/ThreadsReadersWriters.svg" /></div></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">5</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Задача об обедающих философах</h1><div class="body"><ul class="item-1 level-1"><li><var>n</var> философов, <var>n</var> тарелок и <var>n</var> вилок</li><li>Философ либо думает, либо ест</li><li>Чтобы есть нужны две вилки </li></ul><div class="img-width"><img class="width" style="width: 44%" src="pics/ThreadsDiningPhilosophers.svg" /></div></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">6</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Задания и работники</h1><div class="body"><ul class="item-1 level-1"><li>Поток-клиент ждет выполнения задания потоком-сервером </li></ul><div class="img-width"><img class="width" style="width: 75%" src="pics/ThreadsTasksWorkers.svg" /></div></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">7</span></div></div></div></div>
<div class="slide section"><div class="content"><h1>Атомарные операции</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc current">Атомарные операции</a><ol class="level-2 toc-2"><li><a href="#(9)" class="">Теория</a></li><li><a href="#(14)" class="">Практика</a></li><li><a href="#(21)" class="">Помеченные ссылки</a></li></ol></li><li><a href="#(25)" class="toc">Примитивы синхронизации</a></li><li><a href="#(52)" class="toc">Решение классических задач</a></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">8</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Теория</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc current">Атомарные операции</a><ol class="level-2 toc-2"><li><a href="#(9)" class=" current">Теория</a></li><li><a href="#(14)" class="">Практика</a></li><li><a href="#(21)" class="">Помеченные ссылки</a></li></ol></li><li><a href="#(25)" class="toc">Примитивы синхронизации</a></li><li><a href="#(52)" class="toc">Решение классических задач</a></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">9</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Атомарная операция</h1><div class="body"><ul class="item-1 level-1"><li>Операция выполняемая как единое целое<ul class="item-2 level-2"><li>Чтение</li><li>Запись</li></ul></li><li>Неатомарные операции<ul class="item-2 level-2"><li>Инкремент</li><li>Декремент</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">10</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Виды атомарных операций</h1><div class="body"><ul class="item-1 level-1"><li>Чтение<ul class="item-2 level-2"><li><var>get</var></li></ul></li><li>Запись<ul class="item-2 level-2"><li><var>set</var></li></ul></li><li>Чтение и запись<ul class="item-2 level-2"><li><var>getAndSet</var></li></ul></li><li>Условная запись<ul class="item-2 level-2"><li><var>compareAndSet</var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">11</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Условная запись</h1><div class="body"><ul class="item-1 level-1"><li><var>compareAndSet(old, new)</var><ul class="item-2 level-2"><li>Если текущее значение равно <var>old</var></li><li>Записать значение <var>new</var></li></ul></li><li>Идиома <pre class="prettyprint lang-java">do {
    oldV = v.get();
    newV = process(old);
} while (!v.compareAndSet(oldV, newV));
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">12</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Решение задачи доступа к ресурсу</h1><div class="body"><ul class="item-1 level-1"><li>На основе атомарных операций <pre class="prettyprint lang-java">// Получение доступа к ресурсу
while (!v.compareAndSet(0, 1));
// Действия с ресурсом
// Освобождение ресурса
v.set(0);
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">13</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Практика</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc current">Атомарные операции</a><ol class="level-2 toc-2"><li><a href="#(9)" class="">Теория</a></li><li><a href="#(14)" class=" current">Практика</a></li><li><a href="#(21)" class="">Помеченные ссылки</a></li></ol></li><li><a href="#(25)" class="toc">Примитивы синхронизации</a></li><li><a href="#(52)" class="toc">Решение классических задач</a></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">14</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Общие операции</h1><div class="body"><ul class="item-1 level-1"><li>Чтение / запись<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicReference.html#get()" target="_blank">get()</a></var> – атомарное чтение</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicReference.html#set(V)" target="_blank">set(value)</a></var> – атомарная запись</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicReference.html#lazySet(V)" target="_blank">lazySet(value)</a></var> – запись без барьера</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicReference.html#getAndSet(V)" target="_blank">getAndSet(value)</a></var> – чтение и запись</li></ul></li><li>Проверки<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicReference.html#compareAndSet(V,V)" target="_blank">compareAndSet(expected, value)</a></var> – сравнение и запись</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicReference.html#weakCompareAndSet(V,V)" target="_blank">weakCompareAndSet(expected, value)</a></var> – слабое сравнение и запись</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">15</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Операции над числами</h1><div class="body"><ul class="item-1 level-1"><li>Пре- операции<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicInteger.html#getAndIncrement()" target="_blank">getAndIncrement()</a></var> – инкремент</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicInteger.html#getAndDecrement()" target="_blank">getAndDecrement()</a></var> – декремент</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicInteger.html#getAndAdd(int)" target="_blank">getAndAdd(delta)</a></var> – сложение</li></ul></li><li>Пост- операции<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicInteger.html#incrementAndGet()" target="_blank">incrementAndGet()</a></var> – инкремент</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicInteger.html#decrementAndGet()" target="_blank">decrementAndGet()</a></var> – декремент</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicInteger.html#addAndGet(int)" target="_blank">addAndGet(delta)</a></var> – сложение</li></ul></li><li class="incremental"><div class="non-incremental"><span class="question">Почему нет вычитания?</span><ul class="item-2 level-2"><li class="incremental"><div class="non-incremental">Сложение с отрицательным числом</div></li></ul></div></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">16</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Атомарные переменные</h1><div class="body"><ul class="item-1 level-1"><li>Пакет<ul class="item-2 level-2"><li><var>java.util.concurrent.atomic</var></li></ul></li><li>Классы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicBoolean.html" target="_blank">AtomicBoolean</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicInteger.html" target="_blank">AtomicInteger</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicLong.html" target="_blank">AtomicLong</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicReference.html" target="_blank">AtomicReference</a></var></li></ul></li><li>Операции<ul class="item-2 level-2"><li>Обычные</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">17</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Атомарные массивы</h1><div class="body"><ul class="item-1 level-1"><li>Классы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicIntegerArray.html" target="_blank">AtomicIntegerArray</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicLongArray.html" target="_blank">AtomicLongArray</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicReferenceArray.html" target="_blank">AtomicReferenceArray</a></var></li></ul></li><li>Операции<ul class="item-2 level-2"><li>Обычные, с указанием индекса</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicIntegerArray.html#length()" target="_blank">length()</a></var> – число элементов</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">18</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Атомарный доступ к полям</h1><div class="body"><ul class="item-1 level-1"><li>Классы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicIntegerFieldUpdater.html" target="_blank">AtomicIntegerFieldUpdater</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicLongFieldUpdater.html" target="_blank">AtomicLongFieldUpdater</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicReferenceFieldUpdater.html" target="_blank">AtomicReferenceFieldUpdater</a></var></li></ul></li><li>Типы полей<ul class="item-2 level-2"><li><var>volatile</var></li><li>не <var>static</var></li></ul></li><li>Операции<ul class="item-2 level-2"><li>Обычные, с указанием объекта</li><li>Создание <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicIntegerFieldUpdater.html#newUpdater(java.lang.Class,java.lang.String)" target="_blank">newUpdater(class, fieldName)</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">19</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Сбор статистики</h1><div class="body"><ul class="item-1 level-1"><li>Много внутренних переменных</li><li>Сумма чисел<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/LongAdder.html" target="_blank">LongAdder</a></var> и <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/DoubleAdder.html" target="_blank">DoubleAdder</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/LongAdder.html#add(long)" target="_blank">add(long)</a></var> – прибавить</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/LongAdder.html#sum()" target="_blank">sum()</a></var> – сумма</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/LongAdder.html#reset()" target="_blank">reset()</a></var> – сбросить</li></ul></li><li>Аккумулятор<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/LongAccumulator.html" target="_blank">LongAccumulator</a></var> и <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/DoubleAccumulator.html" target="_blank">DoubleAccumulator</a></var></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/LongAccumulator.html#%3Cinit%3E(java.util.function.LongBinaryOperator,long)" target="_blank">LongAccumulator(op, zero)</a></var> – создать</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/LongAccumulator.html#accumulate(long)" target="_blank">accumulate(long)</a></var> – добавить</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/LongAccumulator.html#get()" target="_blank">get()</a></var> – значение</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/LongAccumulator.html#reset()" target="_blank">reset()</a></var> – сбросить</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">20</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Помеченные ссылки</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc current">Атомарные операции</a><ol class="level-2 toc-2"><li><a href="#(9)" class="">Теория</a></li><li><a href="#(14)" class="">Практика</a></li><li><a href="#(21)" class=" current">Помеченные ссылки</a></li></ol></li><li><a href="#(25)" class="toc">Примитивы синхронизации</a></li><li><a href="#(52)" class="toc">Решение классических задач</a></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">21</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Программ. транзакционная память</h1><div class="body"><ul class="item-1 level-1"><li>Программные транзакции<ul class="item-2 level-2"><li>Локализация обновлений</li><li>Персистентные структуры данных</li><li>Атомарное обновление результата<ul class="item-3 level-3"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicReference.html#compareAndSet(V,V)" target="_blank">compareAndSet(expected, value)</a></var></li></ul></li></ul></li><li>Свойства<ul class="item-2 level-2"><li>Первый — выигрывает</li><li>Проблема <var>ABA</var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">22</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Помеченные ссылки</h1><div class="body"><ul class="item-1 level-1"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicMarkableReference.html" target="_blank">AtomicMarkableReference</a></var><ul class="item-2 level-2"><li>ссылка, помеченная флажком</li><li>одноразовая</li></ul></li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicStampedReference.html" target="_blank">AtomicStampedReference</a></var><ul class="item-2 level-2"><li>ссылка, помеченная числом</li><li>многоразовая</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">23</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Операции</h1><div class="body"><ul class="item-1 level-1"><li>Чтения<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicStampedReference.html#getReference()" target="_blank">getReference()</a></var> – прочитать ссылку</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicMarkableReference.html#isMarked()" target="_blank">isMarked()</a></var> / <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicStampedReference.html#getStamp()" target="_blank">getStamp()</a></var> – прочитать пометку</li><li><var>V <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicStampedReference.html#get(int[])" target="_blank">get(X[] holder)</a></var></var> – прочитать ссылку и пометку</li></ul></li><li>Записи<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicStampedReference.html#set(V,int)" target="_blank">set(valueV, valueX)</a></var> – изменить пометку и значение</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicStampedReference.html#attemptStamp(V,int)" target="_blank">attemptX(expectedV, valueX)</a></var> – изменить пометку</li></ul></li><li>Условной записи<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/atomic/AtomicStampedReference.html#compareAndSet(V,V,int,int)" target="_blank">compareAndSet(oldV, newV, oldX, newX)</a></var></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">24</span></div></div></div></div>
<div class="slide section"><div class="content"><h1>Примитивы синхронизации</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc">Атомарные операции</a></li><li><a href="#(25)" class="toc current">Примитивы синхронизации</a><ol class="level-2 toc-2"><li><a href="#(26)" class="">Блокировки и условия</a></li><li><a href="#(35)" class="">Критические секции</a></li><li><a href="#(39)" class="">Семафоры</a></li><li><a href="#(43)" class="">Барьеры</a></li><li><a href="#(46)" class="">Защелки</a></li><li><a href="#(49)" class="">Прочие</a></li></ol></li><li><a href="#(52)" class="toc">Решение классических задач</a></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">25</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Блокировки и условия</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc">Атомарные операции</a></li><li><a href="#(25)" class="toc current">Примитивы синхронизации</a><ol class="level-2 toc-2"><li><a href="#(26)" class=" current">Блокировки и условия</a></li><li><a href="#(35)" class="">Критические секции</a></li><li><a href="#(39)" class="">Семафоры</a></li><li><a href="#(43)" class="">Барьеры</a></li><li><a href="#(46)" class="">Защелки</a></li><li><a href="#(49)" class="">Прочие</a></li></ol></li><li><a href="#(52)" class="toc">Решение классических задач</a></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">26</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Блокировка</h1><div class="body"><ul class="item-1 level-1"><li>Только один поток может владеть блокировкой</li><li>Операции<ul class="item-2 level-2"><li><var>lock</var> – получить блокировку</li><li><var>unlock</var> – отдать блокировку</li><li><var>tryLock</var> – попробовать получить блокировку</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">27</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Блокировки в Java</h1><div class="body"><ul class="item-1 level-1"><li>Интерфейс <var>Lock</var><ul class="item-2 level-2"><li>Пакет <var>java.util.concurrent.locks</var></li></ul></li><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/Lock.html#lock()" target="_blank">lock()</a></var> – захватить блокировку</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/Lock.html#lockInterruptibly()" target="_blank">lockInterruptibly()</a></var> – захватить блокировку</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/Lock.html#tryLock(long,java.util.concurrent.TimeUnit)" target="_blank">tryLock(time?, unit?)</a></var> – попытаться захватить блокировку</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/Lock.html#unlock()" target="_blank">unlock()</a></var> – отпустить блокировку</li></ul></li><li>Передача событий<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/Lock.html#newCondition()" target="_blank">newCondition()</a></var> – создать условие</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">28</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Условия</h1><div class="body"><ul class="item-1 level-1"><li>Интерфейс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/Condition.html" target="_blank">Condition</a></var><ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/Condition.html#await(long,java.util.concurrent.TimeUnit)" target="_blank">await(time?, unit?)</a></var> – ждать условия</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/Condition.html#awaitUntil(java.util.Date)" target="_blank">awaitUntil(deadline)</a></var> – ждать условия до времени</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/Condition.html#awaitUninterruptibly()" target="_blank">awaitUninterruptibly()</a></var> – ждать условие</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/Condition.html#signal()" target="_blank">signal()</a></var> – подать сигнал</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/Condition.html#signalAll()" target="_blank">signalAll()</a></var> – подать сигнал всем</li></ul></li><li>Нужно владеть родительской блокировкой</li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">29</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Производитель</h1><div class="body"><ul class="item-1 level-1"><li>Решение с помощью событий<ul class="item-2 level-2"><li><pre class="prettyprint lang-java">void set(Object data) throws InterruptedException {
    lock.lock();
    try {
        while (this.data != null) {
            notFull.await();
        }
        this.data = data;
        notEmpty.signal();
    } finally {
        lock.unlock();
    }
}
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">30</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Особенности</h1><div class="body"><ul class="item-1 level-1"><li>Отсутствие «блочности»<ul class="item-2 level-2"><li>Необходимость явного отпускания</li></ul></li><li>Идиома <pre class="prettyprint lang-java">l.lock()
try {
    …
} finally {
    l.unlock()
}
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">31</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Производитель-потребитель</h1><div class="body"><ul class="item-1 level-1"><li>Решение с помощью разделенных блокировок<ul class="item-2 level-2"><li>Производитель <pre class="prettyprint lang-java">empty.lock();
// копирование
full.unlock();
</pre></li><li>Потребитель <pre class="prettyprint lang-java">full.lock();
// копирование
empty.unlock();
</pre></li></ul></li><li><span class="warn">Не поддерживается текущей реализацией</span></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">32</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Реализация блокировки</h1><div class="body"><ul class="item-1 level-1"><li>Класс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/ReentrantLock.html" target="_blank">ReentrantLock</a></var></li><li>Дополнительные методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/ReentrantLock.html#isFair()" target="_blank">isFair()</a></var> – «честность» блокировки</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/ReentrantLock.html#isLocked()" target="_blank">isLocked()</a></var> – блокировка занята</li></ul></li><li>Статистика<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/ReentrantLock.html#getQueuedThreads()" target="_blank">getQueuedThreads()</a></var> / <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/ReentrantLock.html#getQueueLength()" target="_blank">getQueueLength()</a></var> / <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/ReentrantLock.html#hasQueuedThread(java.lang.Thread)" target="_blank">hasQueuedThread(thread)</a></var> / <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/ReentrantLock.html#hasQueuedThreads()" target="_blank">hasQueuedThreads()</a></var> – потоки, ждущие блокировку</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/ReentrantLock.html#getWaitingThreads(java.util.concurrent.locks.Condition)" target="_blank">getWaitingThreads(condition)</a></var> / <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/ReentrantLock.html#getWaitQueueLength(java.util.concurrent.locks.Condition)" target="_blank">getWaitQueueLength(condition)</a></var> – потоки, ждущие условие</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">33</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Читатели и писатели</h1><div class="body"><ul class="item-1 level-1"><li>Интерфейс <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/ReadWriteLock.html" target="_blank">ReadWriteLock</a></var></li><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/ReadWriteLock.html#readLock()" target="_blank">readLock()</a></var> – блокировка для читателей</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/ReadWriteLock.html#writeLock()" target="_blank">writeLock()</a></var> – блокировка для писателей</li></ul></li><li>Реализация <var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/locks/ReentrantReadWriteLock.html" target="_blank">ReentrantReadWriteLock</a></var></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">34</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Критические секции</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc">Атомарные операции</a></li><li><a href="#(25)" class="toc current">Примитивы синхронизации</a><ol class="level-2 toc-2"><li><a href="#(26)" class="">Блокировки и условия</a></li><li><a href="#(35)" class=" current">Критические секции</a></li><li><a href="#(39)" class="">Семафоры</a></li><li><a href="#(43)" class="">Барьеры</a></li><li><a href="#(46)" class="">Защелки</a></li><li><a href="#(49)" class="">Прочие</a></li></ol></li><li><a href="#(52)" class="toc">Решение классических задач</a></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">35</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Критическая секция</h1><div class="body"><ul class="item-1 level-1"><li>Только один поток может выполнять действия в критической секции</li><li>Именованные критические секции <pre class="prettyprint lang-java">〈name: statements〉
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">36</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Решение задачи доступа к ресурсу</h1><div class="body"><ul class="item-1 level-1"><li>Доступ производится в критической секции <pre class="prettyprint lang-java">resource
〈
    resource:
    // Доступ к ресурсу
〉
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">37</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Реализации критических секций</h1><div class="body"><ul class="item-1 level-1"><li>На основе неделимых операций <pre class="prettyprint lang-java">〈await(!lock) lock = true;〉 // Вход
// Критическая секция
lock = false; // Выход
</pre></li><li>На основе атомарных операций <pre class="prettyprint lang-java">while (!lock.compareAndSet(0, 1));   // Вход
// Критическая секция
lock.set(0);    // Выход
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">38</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Семафоры</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc">Атомарные операции</a></li><li><a href="#(25)" class="toc current">Примитивы синхронизации</a><ol class="level-2 toc-2"><li><a href="#(26)" class="">Блокировки и условия</a></li><li><a href="#(35)" class="">Критические секции</a></li><li><a href="#(39)" class=" current">Семафоры</a></li><li><a href="#(43)" class="">Барьеры</a></li><li><a href="#(46)" class="">Защелки</a></li><li><a href="#(49)" class="">Прочие</a></li></ol></li><li><a href="#(52)" class="toc">Решение классических задач</a></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">39</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Семафор</h1><div class="body"><ul class="item-1 level-1"><li>Хранит количество разрешений на вход</li><li>Операции<ul class="item-2 level-2"><li><var>acquire</var> — получить разрешение</li><li><var>release</var> — добавить разрешение</li></ul></li><li>Доступ к ограниченным ресурсам</li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">40</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Реализация семафора</h1><div class="body"><ul class="item-1 level-1"><li>С применением атомарных операций<ul class="item-2 level-2"><li>Получение разрешения <pre class="prettyprint lang-java">do {
    do {
        p = permits.get();
    } while (p == 0);
} while (!permits.compareAndSet(p, p - 1));
</pre></li><li>Добавление разрешения <pre class="prettyprint lang-java">do {
    p = permits.get();
} while (!permits.compareAndSet(p, p + 1));
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">41</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Семафоры в Java</h1><div class="body"><ul class="item-1 level-1"><li>Конструкторы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Semaphore.html#%3Cinit%3E(int,boolean)" target="_blank">Semaphore(n, fair?)</a></var> – число разрешений и честность</li></ul></li><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Semaphore.html#acquire(int)" target="_blank">acquire(n?)</a></var> – получить разрешение</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Semaphore.html#release(int)" target="_blank">release(n?)</a></var> – отдать разрешение</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Semaphore.html#tryAcquire(int,long,java.util.concurrent.TimeUnit)" target="_blank">tryAcquire(n?, time?, unit?)</a></var> – попробовать получить разрешение</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Semaphore.html#reducePermits(int)" target="_blank">reducePermits(n)</a></var> – уменьшить число разрешений</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Semaphore.html#drainPermits()" target="_blank">drainPermits()</a></var> – забрать все разрешения</li><li>статистика</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">42</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Барьеры</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc">Атомарные операции</a></li><li><a href="#(25)" class="toc current">Примитивы синхронизации</a><ol class="level-2 toc-2"><li><a href="#(26)" class="">Блокировки и условия</a></li><li><a href="#(35)" class="">Критические секции</a></li><li><a href="#(39)" class="">Семафоры</a></li><li><a href="#(43)" class=" current">Барьеры</a></li><li><a href="#(46)" class="">Защелки</a></li><li><a href="#(49)" class="">Прочие</a></li></ol></li><li><a href="#(52)" class="toc">Решение классических задач</a></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">43</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Барьер</h1><div class="body"><ul class="item-1 level-1"><li>Потоки блокируются пока все потоки не прибудут к барьеру<ul class="item-2 level-2"><li>Одноразовый</li><li>Многоразовый</li></ul></li><li>Операции<ul class="item-2 level-2"><li><var>arrive</var> — прибытие к барьеру</li></ul></li><li>Синхронизация потоков<ul class="item-2 level-2"><li>Переход к следующему этапу</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">44</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Барьеры в Java</h1><div class="body"><ul class="item-1 level-1"><li>Конструкторы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/CyclicBarrier.html#%3Cinit%3E(int,java.lang.Runnable)" target="_blank">CyclicBarrier(n, runnable?)</a></var> – число потоков и действие на барьере</li></ul></li><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/CyclicBarrier.html#await(long,java.util.concurrent.TimeUnit)" target="_blank">await(time?, unit?)</a></var> – барьер.</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/CyclicBarrier.html#reset()" target="_blank">reset()</a></var> – возвращает барьер в исходное состояние</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/CyclicBarrier.html#isBroken()" target="_blank">isBroken()</a></var> – «сломан» ли барьер</li><li>статистика</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">45</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Защелки</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc">Атомарные операции</a></li><li><a href="#(25)" class="toc current">Примитивы синхронизации</a><ol class="level-2 toc-2"><li><a href="#(26)" class="">Блокировки и условия</a></li><li><a href="#(35)" class="">Критические секции</a></li><li><a href="#(39)" class="">Семафоры</a></li><li><a href="#(43)" class="">Барьеры</a></li><li><a href="#(46)" class=" current">Защелки</a></li><li><a href="#(49)" class="">Прочие</a></li></ol></li><li><a href="#(52)" class="toc">Решение классических задач</a></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">46</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Защелки</h1><div class="body"><ul class="item-1 level-1"><li>Ожидание завершения нескольких действий</li><li>Операции<ul class="item-2 level-2"><li><var>countDown()</var> – опускает защелку на единицу</li><li><var>await()</var> – ждет спуска защелки</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">47</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Защелки в Java</h1><div class="body"><ul class="item-1 level-1"><li>Конструктор<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/CountDownLatch.html#%3Cinit%3E(int)" target="_blank">CountDownLatch(n)</a></var> – высота защелки</li></ul></li><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/CountDownLatch.html#await(long,java.util.concurrent.TimeUnit)" target="_blank">await(time?, unit?)</a></var> – ждет спуска защелки</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/CountDownLatch.html#countDown()" target="_blank">countDown()</a></var> – опускает защелку на единицу</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/CountDownLatch.html#getCount()" target="_blank">getCount()</a></var> – текущая высота защелки</li></ul></li><li>Применение<ul class="item-2 level-2"><li>Инициализация</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">48</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Прочие</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc">Атомарные операции</a></li><li><a href="#(25)" class="toc current">Примитивы синхронизации</a><ol class="level-2 toc-2"><li><a href="#(26)" class="">Блокировки и условия</a></li><li><a href="#(35)" class="">Критические секции</a></li><li><a href="#(39)" class="">Семафоры</a></li><li><a href="#(43)" class="">Барьеры</a></li><li><a href="#(46)" class="">Защелки</a></li><li><a href="#(49)" class=" current">Прочие</a></li></ol></li><li><a href="#(52)" class="toc">Решение классических задач</a></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">49</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Phaser</h1><div class="body"><ul class="item-1 level-1"><li>Динамический барьер / защелка</li><li>Класс<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Phaser.html" target="_blank">Phaser</a></var></li></ul></li><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Phaser.html#register()" target="_blank">register()</a></var> – добавить фрагмент</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Phaser.html#arrive()" target="_blank">arrive()</a></var> – фрагмент выполнен</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Phaser.html#arriveAndAwaitAdvance()" target="_blank">arriveAndAwaitAdvance()</a></var> – и дождаться остальных</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Phaser.html#arriveAndDeregister()" target="_blank">arriveAndDeregister()</a></var> – и больше никогда не ждать</li><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Phaser.html#awaitAdvance(int)" target="_blank">awaitAdvance(phase)</a></var> – дождаться конца фазы</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">50</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Рандеву</h1><div class="body"><ul class="item-1 level-1"><li>Синхронный обмен объектами</li><li>Класс<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Exchanger.html" target="_blank">Exchanger&lt;V&gt;</a></var></li></ul></li><li>Методы<ul class="item-2 level-2"><li><var><a href="https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/concurrent/Exchanger.html#exchange(V,long,java.util.concurrent.TimeUnit)" target="_blank">exchange(value, time?, unit?)</a></var> – обменяться</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">51</span></div></div></div></div>
<div class="slide section"><div class="content"><h1>Решение классических задач</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc">Атомарные операции</a></li><li><a href="#(25)" class="toc">Примитивы синхронизации</a></li><li><a href="#(52)" class="toc current">Решение классических задач</a><ol class="level-2 toc-2"><li><a href="#(53)" class="">Простые задачи</a></li><li><a href="#(56)" class="">Задача о читателях и писателях</a></li></ol></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">52</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Простые задачи</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc">Атомарные операции</a></li><li><a href="#(25)" class="toc">Примитивы синхронизации</a></li><li><a href="#(52)" class="toc current">Решение классических задач</a><ol class="level-2 toc-2"><li><a href="#(53)" class=" current">Простые задачи</a></li><li><a href="#(56)" class="">Задача о читателях и писателях</a></li></ol></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">53</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Задания-работники</h1><div class="body"><ul class="item-1 level-1"><li>Решение с помощью монитора<ul class="item-2 level-2"><li>Задание <pre class="prettyprint lang-java">queue.add(task);
queue.notify();
task.wait();
</pre></li><li>Работник <pre class="prettyprint lang-java">while (queue.isEmpty()) {
    queue.wait();
}
Task t = queue.get();
// Обработка задания
t.notify();
</pre></li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">54</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Задача об обедающих философах</h1><div class="body"><ul class="item-1 level-1"><li>Решение с помощью асимметрии<ul class="item-2 level-2"><li>Все философы кроме одного берут сначала левую, затем правую вилку</li><li>Оставшийся философ берет сначала правую, затем левую вилку</li></ul></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">55</span></div></div></div></div>
<div class="slide subsection"><div class="content"><h1>Задача о читателях и писателях</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc">Атомарные операции</a></li><li><a href="#(25)" class="toc">Примитивы синхронизации</a></li><li><a href="#(52)" class="toc current">Решение классических задач</a><ol class="level-2 toc-2"><li><a href="#(53)" class="">Простые задачи</a></li><li><a href="#(56)" class=" current">Задача о читателях и писателях</a></li></ol></li><li><a href="#(63)" class="toc">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">56</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Решение с помощью блокировки</h1><div class="body"><ul class="item-1 level-1"><li>Читатель <pre class="prettyprint lang-java">〈if (nr++ == 0) busy.lock();〉
// Чтение
〈if (--nr == 0) busy.unlock();〉
</pre></li><li>Писатель <pre class="prettyprint lang-java">busy.lock();
// Запись
busy.unlock();
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">57</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Решение с накопителем </h1><div class="body"><div class="img-width"><img class="width" style="width: 60%" src="pics/ThreadsReadersWritersHandover.svg" /></div></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">58</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Накопители и передача эстафеты</h1><div class="body"><ul class="item-1 level-1"><li>Если есть и писатели, и читатели, то вход закрывается</li><li>Пока есть читатели – разрешать чтение</li><li>Когда нет читателей – разрешить запись</li><li>Когда нет ни читателей, ни писателей – открыть вход</li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">59</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Задача о читателях и писателях</h1><div class="body"><ul class="item-1 level-1"><li>Передача эстафеты <pre class="prettyprint lang-java">if (nw == 0 &amp;&amp; dr &gt; 0) {
    dr--;
    // Возобновить процесс-читатель
    r.unlock();
} else if (nr == 0 &amp;&amp; nw == 0 &amp;&amp; dw &gt; 0) {
    dw--;
    // Возобновить процесс-писатель
    w.unlock();
} else {
    e.unlock(); // Открыть вход
}
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">60</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Задача о читателях и писателях</h1><div class="body"><ul class="item-1 level-1"><li>Читатель <pre class="prettyprint lang-java">e.lock();
if (nw &gt; 0) { dr++; e.unlock(); r.lock(); }
// Доступ разрешен
nr++;
// Передача эстафеты
// Чтение
e.lock();
nr--;
// Передача эстафеты
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">61</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Задача о читателях и писателях</h1><div class="body"><ul class="item-1 level-1"><li>Писатель <pre class="prettyprint lang-java">e.lock();
if (nw &gt; 0 || nr &gt; 0) { dw++; e.unlock(); w.lock(); }
nw++;
// Передача эстафеты
// Запись
e.lock();
nw--;
// Передача эстафеты
</pre></li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">62</span></div></div></div></div>
<div class="slide section"><div class="content"><h1>Заключение</h1><h2>Содержание</h2><div class="body"><ol class="level-1 toc-1"><li><a href="#(2)" class="toc">Классические задачи</a></li><li><a href="#(8)" class="toc">Атомарные операции</a></li><li><a href="#(25)" class="toc">Примитивы синхронизации</a></li><li><a href="#(52)" class="toc">Решение классических задач</a></li><li><a href="#(63)" class="toc current">Заключение</a></li></ol></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">63</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Ссылки</h1><div class="body"><ul class="item-1 level-1"><li>Java Concurrency Utilities // <a href="https://docs.oracle.com/javase/8/docs/technotes/guides/concurrency/index.html" target="_blank">https://docs.oracle.com/javase/8/docs/technotes/<br />guides/concurrency/index.html</a></li><li>High Level Concurrency Objects (Java Tutorial) // <a href="https://docs.oracle.com/javase/tutorial/essential/concurrency/highlevel.html" target="_blank">https://docs.oracle.com/javase/tutorial/essential/<br />concurrency/highlevel.html</a></li><li>Goetz B. Java Concurrency in Practice</li></ul></div><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">64</span></div></div></div></div>
<div class="slide"><div class="content"><h1>Вопросы</h1><div class="body" /><div class="footer"><div class="test"><span class="author">Georgiy Korneev</span><span class="title">Технологии Java / Задачи и средства многопоточного программирования</span><span class="number">65</span></div></div></div></div></div></body></html>